# Generated by Django 2.2.10 on 2020-03-07 11:12

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('prospects', '0001_initial'),
        ('campaigns', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('billing', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AreaCodeState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_market', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('area_code', models.CharField(blank=True, max_length=16, null=True)),
                ('state', models.CharField(blank=True, max_length=16, null=True)),
                ('city', models.CharField(blank=True, max_length=64, null=True)),
                ('overlay_group', models.CharField(blank=True, max_length=64, null=True)),
                ('temp_first_choice', models.IntegerField(default=0)),
                ('temp_second_choice', models.IntegerField(default=0)),
                ('latitude', models.CharField(blank=True, max_length=64, null=True)),
                ('longitude', models.CharField(blank=True, max_length=64, null=True)),
                ('market_cap', models.IntegerField(default=15)),
            ],
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('health', models.CharField(choices=[('good', 'Good')], default='good', max_length=16)),
                ('is_default', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('has_priority', models.BooleanField(default=False)),
                ('total_priority', models.PositiveSmallIntegerField(default=0)),
                ('total_sms_followups', models.IntegerField(default=0)),
                ('total_skipped', models.IntegerField(default=0)),
                ('total_dnc_count', models.IntegerField(default=0)),
                ('total_phone_lookup_count', models.IntegerField(default=0)),
                ('total_sms_sent_count', models.IntegerField(default=0)),
                ('total_sms_received_count', models.IntegerField(default=0)),
                ('total_auto_dead_count', models.IntegerField(default=0)),
                ('total_initial_sent_skipped', models.IntegerField(default=0)),
                ('total_mobile', models.IntegerField(default=0)),
                ('total_landline', models.IntegerField(default=0)),
                ('total_phone_other', models.IntegerField(default=0)),
                ('total_intial_sms_sent_today_count', models.IntegerField(default=0)),
                ('total_leads', models.IntegerField(default=0)),
                ('has_delivered_sms_only_count', models.IntegerField(default=0)),
                ('has_unread_sms', models.BooleanField(default=False)),
                ('show_unviewed_only_filter', models.BooleanField(default=False)),
                ('show_qualified_lead_filter', models.BooleanField(default=False)),
                ('set_auto_dead', models.BooleanField(default=True)),
                ('set_auto_dead_select', models.CharField(choices=[('No', 'No'), ('Yes', 'Yes')], default='Yes', max_length=255)),
                ('podio_push_email_address', models.CharField(blank=True, max_length=255, null=True)),
                ('skip_trace_cost_per_record', models.CharField(choices=[('.04', '.04'), ('.05', '.05'), ('.06', '.06'), ('.07', '.07'), ('.08', '.08'), ('.09', '.09'), ('.10', '.10'), ('.11', '.11'), ('.12', '.12'), ('.13', '.13'), ('.14', '.14'), ('.15', '.15'), ('.16', '.16'), ('.17', '.17'), ('.18', '.18'), ('.19', '.19'), ('.20', '.20'), ('.21', '.21'), ('.22', '.22'), ('.23', '.23'), ('.24', '.24'), ('.25', '.25'), ('.26', '.26'), ('.27', '.27'), ('.28', '.28'), ('.29', '.29'), ('.30', '.30'), ('.31', '.31'), ('.32', '.32'), ('.33', '.33'), ('.34', '.34'), ('.35', '.35')], default='.07', max_length=255)),
                ('call_forward_number', models.CharField(blank=True, max_length=255, null=True)),
                ('timezone', models.CharField(choices=[('Africa/Abidjan', 'Africa/Abidjan'), ('Africa/Accra', 'Africa/Accra'), ('Africa/Addis_Ababa', 'Africa/Addis_Ababa'), ('Africa/Algiers', 'Africa/Algiers'), ('Africa/Asmara', 'Africa/Asmara'), ('Africa/Bamako', 'Africa/Bamako'), ('Africa/Bangui', 'Africa/Bangui'), ('Africa/Banjul', 'Africa/Banjul'), ('Africa/Bissau', 'Africa/Bissau'), ('Africa/Blantyre', 'Africa/Blantyre'), ('Africa/Brazzaville', 'Africa/Brazzaville'), ('Africa/Bujumbura', 'Africa/Bujumbura'), ('Africa/Cairo', 'Africa/Cairo'), ('Africa/Casablanca', 'Africa/Casablanca'), ('Africa/Ceuta', 'Africa/Ceuta'), ('Africa/Conakry', 'Africa/Conakry'), ('Africa/Dakar', 'Africa/Dakar'), ('Africa/Dar_es_Salaam', 'Africa/Dar_es_Salaam'), ('Africa/Djibouti', 'Africa/Djibouti'), ('Africa/Douala', 'Africa/Douala'), ('Africa/El_Aaiun', 'Africa/El_Aaiun'), ('Africa/Freetown', 'Africa/Freetown'), ('Africa/Gaborone', 'Africa/Gaborone'), ('Africa/Harare', 'Africa/Harare'), ('Africa/Johannesburg', 'Africa/Johannesburg'), ('Africa/Juba', 'Africa/Juba'), ('Africa/Kampala', 'Africa/Kampala'), ('Africa/Khartoum', 'Africa/Khartoum'), ('Africa/Kigali', 'Africa/Kigali'), ('Africa/Kinshasa', 'Africa/Kinshasa'), ('Africa/Lagos', 'Africa/Lagos'), ('Africa/Libreville', 'Africa/Libreville'), ('Africa/Lome', 'Africa/Lome'), ('Africa/Luanda', 'Africa/Luanda'), ('Africa/Lubumbashi', 'Africa/Lubumbashi'), ('Africa/Lusaka', 'Africa/Lusaka'), ('Africa/Malabo', 'Africa/Malabo'), ('Africa/Maputo', 'Africa/Maputo'), ('Africa/Maseru', 'Africa/Maseru'), ('Africa/Mbabane', 'Africa/Mbabane'), ('Africa/Mogadishu', 'Africa/Mogadishu'), ('Africa/Monrovia', 'Africa/Monrovia'), ('Africa/Nairobi', 'Africa/Nairobi'), ('Africa/Ndjamena', 'Africa/Ndjamena'), ('Africa/Niamey', 'Africa/Niamey'), ('Africa/Nouakchott', 'Africa/Nouakchott'), ('Africa/Ouagadougou', 'Africa/Ouagadougou'), ('Africa/Porto-Novo', 'Africa/Porto-Novo'), ('Africa/Sao_Tome', 'Africa/Sao_Tome'), ('Africa/Tripoli', 'Africa/Tripoli'), ('Africa/Tunis', 'Africa/Tunis'), ('Africa/Windhoek', 'Africa/Windhoek'), ('America/Adak', 'America/Adak'), ('America/Anchorage', 'America/Anchorage'), ('America/Anguilla', 'America/Anguilla'), ('America/Antigua', 'America/Antigua'), ('America/Araguaina', 'America/Araguaina'), ('America/Argentina/Buenos_Aires', 'America/Argentina/Buenos_Aires'), ('America/Argentina/Catamarca', 'America/Argentina/Catamarca'), ('America/Argentina/Cordoba', 'America/Argentina/Cordoba'), ('America/Argentina/Jujuy', 'America/Argentina/Jujuy'), ('America/Argentina/La_Rioja', 'America/Argentina/La_Rioja'), ('America/Argentina/Mendoza', 'America/Argentina/Mendoza'), ('America/Argentina/Rio_Gallegos', 'America/Argentina/Rio_Gallegos'), ('America/Argentina/Salta', 'America/Argentina/Salta'), ('America/Argentina/San_Juan', 'America/Argentina/San_Juan'), ('America/Argentina/San_Luis', 'America/Argentina/San_Luis'), ('America/Argentina/Tucuman', 'America/Argentina/Tucuman'), ('America/Argentina/Ushuaia', 'America/Argentina/Ushuaia'), ('America/Aruba', 'America/Aruba'), ('America/Asuncion', 'America/Asuncion'), ('America/Atikokan', 'America/Atikokan'), ('America/Bahia', 'America/Bahia'), ('America/Bahia_Banderas', 'America/Bahia_Banderas'), ('America/Barbados', 'America/Barbados'), ('America/Belem', 'America/Belem'), ('America/Belize', 'America/Belize'), ('America/Blanc-Sablon', 'America/Blanc-Sablon'), ('America/Boa_Vista', 'America/Boa_Vista'), ('America/Bogota', 'America/Bogota'), ('America/Boise', 'America/Boise'), ('America/Cambridge_Bay', 'America/Cambridge_Bay'), ('America/Campo_Grande', 'America/Campo_Grande'), ('America/Cancun', 'America/Cancun'), ('America/Caracas', 'America/Caracas'), ('America/Cayenne', 'America/Cayenne'), ('America/Cayman', 'America/Cayman'), ('America/Chicago', 'America/Chicago'), ('America/Chihuahua', 'America/Chihuahua'), ('America/Costa_Rica', 'America/Costa_Rica'), ('America/Creston', 'America/Creston'), ('America/Cuiaba', 'America/Cuiaba'), ('America/Curacao', 'America/Curacao'), ('America/Danmarkshavn', 'America/Danmarkshavn'), ('America/Dawson', 'America/Dawson'), ('America/Dawson_Creek', 'America/Dawson_Creek'), ('America/Denver', 'America/Denver'), ('America/Detroit', 'America/Detroit'), ('America/Dominica', 'America/Dominica'), ('America/Edmonton', 'America/Edmonton'), ('America/Eirunepe', 'America/Eirunepe'), ('America/El_Salvador', 'America/El_Salvador'), ('America/Fort_Nelson', 'America/Fort_Nelson'), ('America/Fortaleza', 'America/Fortaleza'), ('America/Glace_Bay', 'America/Glace_Bay'), ('America/Godthab', 'America/Godthab'), ('America/Goose_Bay', 'America/Goose_Bay'), ('America/Grand_Turk', 'America/Grand_Turk'), ('America/Grenada', 'America/Grenada'), ('America/Guadeloupe', 'America/Guadeloupe'), ('America/Guatemala', 'America/Guatemala'), ('America/Guayaquil', 'America/Guayaquil'), ('America/Guyana', 'America/Guyana'), ('America/Halifax', 'America/Halifax'), ('America/Havana', 'America/Havana'), ('America/Hermosillo', 'America/Hermosillo'), ('America/Indiana/Indianapolis', 'America/Indiana/Indianapolis'), ('America/Indiana/Knox', 'America/Indiana/Knox'), ('America/Indiana/Marengo', 'America/Indiana/Marengo'), ('America/Indiana/Petersburg', 'America/Indiana/Petersburg'), ('America/Indiana/Tell_City', 'America/Indiana/Tell_City'), ('America/Indiana/Vevay', 'America/Indiana/Vevay'), ('America/Indiana/Vincennes', 'America/Indiana/Vincennes'), ('America/Indiana/Winamac', 'America/Indiana/Winamac'), ('America/Inuvik', 'America/Inuvik'), ('America/Iqaluit', 'America/Iqaluit'), ('America/Jamaica', 'America/Jamaica'), ('America/Juneau', 'America/Juneau'), ('America/Kentucky/Louisville', 'America/Kentucky/Louisville'), ('America/Kentucky/Monticello', 'America/Kentucky/Monticello'), ('America/Kralendijk', 'America/Kralendijk'), ('America/La_Paz', 'America/La_Paz'), ('America/Lima', 'America/Lima'), ('America/Los_Angeles', 'America/Los_Angeles'), ('America/Lower_Princes', 'America/Lower_Princes'), ('America/Maceio', 'America/Maceio'), ('America/Managua', 'America/Managua'), ('America/Manaus', 'America/Manaus'), ('America/Marigot', 'America/Marigot'), ('America/Martinique', 'America/Martinique'), ('America/Matamoros', 'America/Matamoros'), ('America/Mazatlan', 'America/Mazatlan'), ('America/Menominee', 'America/Menominee'), ('America/Merida', 'America/Merida'), ('America/Metlakatla', 'America/Metlakatla'), ('America/Mexico_City', 'America/Mexico_City'), ('America/Miquelon', 'America/Miquelon'), ('America/Moncton', 'America/Moncton'), ('America/Monterrey', 'America/Monterrey'), ('America/Montevideo', 'America/Montevideo'), ('America/Montserrat', 'America/Montserrat'), ('America/Nassau', 'America/Nassau'), ('America/New_York', 'America/New_York'), ('America/Nipigon', 'America/Nipigon'), ('America/Nome', 'America/Nome'), ('America/Noronha', 'America/Noronha'), ('America/North_Dakota/Beulah', 'America/North_Dakota/Beulah'), ('America/North_Dakota/Center', 'America/North_Dakota/Center'), ('America/North_Dakota/New_Salem', 'America/North_Dakota/New_Salem'), ('America/Ojinaga', 'America/Ojinaga'), ('America/Panama', 'America/Panama'), ('America/Pangnirtung', 'America/Pangnirtung'), ('America/Paramaribo', 'America/Paramaribo'), ('America/Phoenix', 'America/Phoenix'), ('America/Port-au-Prince', 'America/Port-au-Prince'), ('America/Port_of_Spain', 'America/Port_of_Spain'), ('America/Porto_Velho', 'America/Porto_Velho'), ('America/Puerto_Rico', 'America/Puerto_Rico'), ('America/Punta_Arenas', 'America/Punta_Arenas'), ('America/Rainy_River', 'America/Rainy_River'), ('America/Rankin_Inlet', 'America/Rankin_Inlet'), ('America/Recife', 'America/Recife'), ('America/Regina', 'America/Regina'), ('America/Resolute', 'America/Resolute'), ('America/Rio_Branco', 'America/Rio_Branco'), ('America/Santarem', 'America/Santarem'), ('America/Santiago', 'America/Santiago'), ('America/Santo_Domingo', 'America/Santo_Domingo'), ('America/Sao_Paulo', 'America/Sao_Paulo'), ('America/Scoresbysund', 'America/Scoresbysund'), ('America/Sitka', 'America/Sitka'), ('America/St_Barthelemy', 'America/St_Barthelemy'), ('America/St_Johns', 'America/St_Johns'), ('America/St_Kitts', 'America/St_Kitts'), ('America/St_Lucia', 'America/St_Lucia'), ('America/St_Thomas', 'America/St_Thomas'), ('America/St_Vincent', 'America/St_Vincent'), ('America/Swift_Current', 'America/Swift_Current'), ('America/Tegucigalpa', 'America/Tegucigalpa'), ('America/Thule', 'America/Thule'), ('America/Thunder_Bay', 'America/Thunder_Bay'), ('America/Tijuana', 'America/Tijuana'), ('America/Toronto', 'America/Toronto'), ('America/Tortola', 'America/Tortola'), ('America/Vancouver', 'America/Vancouver'), ('America/Whitehorse', 'America/Whitehorse'), ('America/Winnipeg', 'America/Winnipeg'), ('America/Yakutat', 'America/Yakutat'), ('America/Yellowknife', 'America/Yellowknife'), ('Antarctica/Casey', 'Antarctica/Casey'), ('Antarctica/Davis', 'Antarctica/Davis'), ('Antarctica/DumontDUrville', 'Antarctica/DumontDUrville'), ('Antarctica/Macquarie', 'Antarctica/Macquarie'), ('Antarctica/Mawson', 'Antarctica/Mawson'), ('Antarctica/McMurdo', 'Antarctica/McMurdo'), ('Antarctica/Palmer', 'Antarctica/Palmer'), ('Antarctica/Rothera', 'Antarctica/Rothera'), ('Antarctica/Syowa', 'Antarctica/Syowa'), ('Antarctica/Troll', 'Antarctica/Troll'), ('Antarctica/Vostok', 'Antarctica/Vostok'), ('Arctic/Longyearbyen', 'Arctic/Longyearbyen'), ('Asia/Aden', 'Asia/Aden'), ('Asia/Almaty', 'Asia/Almaty'), ('Asia/Amman', 'Asia/Amman'), ('Asia/Anadyr', 'Asia/Anadyr'), ('Asia/Aqtau', 'Asia/Aqtau'), ('Asia/Aqtobe', 'Asia/Aqtobe'), ('Asia/Ashgabat', 'Asia/Ashgabat'), ('Asia/Atyrau', 'Asia/Atyrau'), ('Asia/Baghdad', 'Asia/Baghdad'), ('Asia/Bahrain', 'Asia/Bahrain'), ('Asia/Baku', 'Asia/Baku'), ('Asia/Bangkok', 'Asia/Bangkok'), ('Asia/Barnaul', 'Asia/Barnaul'), ('Asia/Beirut', 'Asia/Beirut'), ('Asia/Bishkek', 'Asia/Bishkek'), ('Asia/Brunei', 'Asia/Brunei'), ('Asia/Chita', 'Asia/Chita'), ('Asia/Choibalsan', 'Asia/Choibalsan'), ('Asia/Colombo', 'Asia/Colombo'), ('Asia/Damascus', 'Asia/Damascus'), ('Asia/Dhaka', 'Asia/Dhaka'), ('Asia/Dili', 'Asia/Dili'), ('Asia/Dubai', 'Asia/Dubai'), ('Asia/Dushanbe', 'Asia/Dushanbe'), ('Asia/Famagusta', 'Asia/Famagusta'), ('Asia/Gaza', 'Asia/Gaza'), ('Asia/Hebron', 'Asia/Hebron'), ('Asia/Ho_Chi_Minh', 'Asia/Ho_Chi_Minh'), ('Asia/Hong_Kong', 'Asia/Hong_Kong'), ('Asia/Hovd', 'Asia/Hovd'), ('Asia/Irkutsk', 'Asia/Irkutsk'), ('Asia/Jakarta', 'Asia/Jakarta'), ('Asia/Jayapura', 'Asia/Jayapura'), ('Asia/Jerusalem', 'Asia/Jerusalem'), ('Asia/Kabul', 'Asia/Kabul'), ('Asia/Kamchatka', 'Asia/Kamchatka'), ('Asia/Karachi', 'Asia/Karachi'), ('Asia/Kathmandu', 'Asia/Kathmandu'), ('Asia/Khandyga', 'Asia/Khandyga'), ('Asia/Kolkata', 'Asia/Kolkata'), ('Asia/Krasnoyarsk', 'Asia/Krasnoyarsk'), ('Asia/Kuala_Lumpur', 'Asia/Kuala_Lumpur'), ('Asia/Kuching', 'Asia/Kuching'), ('Asia/Kuwait', 'Asia/Kuwait'), ('Asia/Macau', 'Asia/Macau'), ('Asia/Magadan', 'Asia/Magadan'), ('Asia/Makassar', 'Asia/Makassar'), ('Asia/Manila', 'Asia/Manila'), ('Asia/Muscat', 'Asia/Muscat'), ('Asia/Nicosia', 'Asia/Nicosia'), ('Asia/Novokuznetsk', 'Asia/Novokuznetsk'), ('Asia/Novosibirsk', 'Asia/Novosibirsk'), ('Asia/Omsk', 'Asia/Omsk'), ('Asia/Oral', 'Asia/Oral'), ('Asia/Phnom_Penh', 'Asia/Phnom_Penh'), ('Asia/Pontianak', 'Asia/Pontianak'), ('Asia/Pyongyang', 'Asia/Pyongyang'), ('Asia/Qatar', 'Asia/Qatar'), ('Asia/Qostanay', 'Asia/Qostanay'), ('Asia/Qyzylorda', 'Asia/Qyzylorda'), ('Asia/Riyadh', 'Asia/Riyadh'), ('Asia/Sakhalin', 'Asia/Sakhalin'), ('Asia/Samarkand', 'Asia/Samarkand'), ('Asia/Seoul', 'Asia/Seoul'), ('Asia/Shanghai', 'Asia/Shanghai'), ('Asia/Singapore', 'Asia/Singapore'), ('Asia/Srednekolymsk', 'Asia/Srednekolymsk'), ('Asia/Taipei', 'Asia/Taipei'), ('Asia/Tashkent', 'Asia/Tashkent'), ('Asia/Tbilisi', 'Asia/Tbilisi'), ('Asia/Tehran', 'Asia/Tehran'), ('Asia/Thimphu', 'Asia/Thimphu'), ('Asia/Tokyo', 'Asia/Tokyo'), ('Asia/Tomsk', 'Asia/Tomsk'), ('Asia/Ulaanbaatar', 'Asia/Ulaanbaatar'), ('Asia/Urumqi', 'Asia/Urumqi'), ('Asia/Ust-Nera', 'Asia/Ust-Nera'), ('Asia/Vientiane', 'Asia/Vientiane'), ('Asia/Vladivostok', 'Asia/Vladivostok'), ('Asia/Yakutsk', 'Asia/Yakutsk'), ('Asia/Yangon', 'Asia/Yangon'), ('Asia/Yekaterinburg', 'Asia/Yekaterinburg'), ('Asia/Yerevan', 'Asia/Yerevan'), ('Atlantic/Azores', 'Atlantic/Azores'), ('Atlantic/Bermuda', 'Atlantic/Bermuda'), ('Atlantic/Canary', 'Atlantic/Canary'), ('Atlantic/Cape_Verde', 'Atlantic/Cape_Verde'), ('Atlantic/Faroe', 'Atlantic/Faroe'), ('Atlantic/Madeira', 'Atlantic/Madeira'), ('Atlantic/Reykjavik', 'Atlantic/Reykjavik'), ('Atlantic/South_Georgia', 'Atlantic/South_Georgia'), ('Atlantic/St_Helena', 'Atlantic/St_Helena'), ('Atlantic/Stanley', 'Atlantic/Stanley'), ('Australia/Adelaide', 'Australia/Adelaide'), ('Australia/Brisbane', 'Australia/Brisbane'), ('Australia/Broken_Hill', 'Australia/Broken_Hill'), ('Australia/Currie', 'Australia/Currie'), ('Australia/Darwin', 'Australia/Darwin'), ('Australia/Eucla', 'Australia/Eucla'), ('Australia/Hobart', 'Australia/Hobart'), ('Australia/Lindeman', 'Australia/Lindeman'), ('Australia/Lord_Howe', 'Australia/Lord_Howe'), ('Australia/Melbourne', 'Australia/Melbourne'), ('Australia/Perth', 'Australia/Perth'), ('Australia/Sydney', 'Australia/Sydney'), ('Canada/Atlantic', 'Canada/Atlantic'), ('Canada/Central', 'Canada/Central'), ('Canada/Eastern', 'Canada/Eastern'), ('Canada/Mountain', 'Canada/Mountain'), ('Canada/Newfoundland', 'Canada/Newfoundland'), ('Canada/Pacific', 'Canada/Pacific'), ('Europe/Amsterdam', 'Europe/Amsterdam'), ('Europe/Andorra', 'Europe/Andorra'), ('Europe/Astrakhan', 'Europe/Astrakhan'), ('Europe/Athens', 'Europe/Athens'), ('Europe/Belgrade', 'Europe/Belgrade'), ('Europe/Berlin', 'Europe/Berlin'), ('Europe/Bratislava', 'Europe/Bratislava'), ('Europe/Brussels', 'Europe/Brussels'), ('Europe/Bucharest', 'Europe/Bucharest'), ('Europe/Budapest', 'Europe/Budapest'), ('Europe/Busingen', 'Europe/Busingen'), ('Europe/Chisinau', 'Europe/Chisinau'), ('Europe/Copenhagen', 'Europe/Copenhagen'), ('Europe/Dublin', 'Europe/Dublin'), ('Europe/Gibraltar', 'Europe/Gibraltar'), ('Europe/Guernsey', 'Europe/Guernsey'), ('Europe/Helsinki', 'Europe/Helsinki'), ('Europe/Isle_of_Man', 'Europe/Isle_of_Man'), ('Europe/Istanbul', 'Europe/Istanbul'), ('Europe/Jersey', 'Europe/Jersey'), ('Europe/Kaliningrad', 'Europe/Kaliningrad'), ('Europe/Kiev', 'Europe/Kiev'), ('Europe/Kirov', 'Europe/Kirov'), ('Europe/Lisbon', 'Europe/Lisbon'), ('Europe/Ljubljana', 'Europe/Ljubljana'), ('Europe/London', 'Europe/London'), ('Europe/Luxembourg', 'Europe/Luxembourg'), ('Europe/Madrid', 'Europe/Madrid'), ('Europe/Malta', 'Europe/Malta'), ('Europe/Mariehamn', 'Europe/Mariehamn'), ('Europe/Minsk', 'Europe/Minsk'), ('Europe/Monaco', 'Europe/Monaco'), ('Europe/Moscow', 'Europe/Moscow'), ('Europe/Oslo', 'Europe/Oslo'), ('Europe/Paris', 'Europe/Paris'), ('Europe/Podgorica', 'Europe/Podgorica'), ('Europe/Prague', 'Europe/Prague'), ('Europe/Riga', 'Europe/Riga'), ('Europe/Rome', 'Europe/Rome'), ('Europe/Samara', 'Europe/Samara'), ('Europe/San_Marino', 'Europe/San_Marino'), ('Europe/Sarajevo', 'Europe/Sarajevo'), ('Europe/Saratov', 'Europe/Saratov'), ('Europe/Simferopol', 'Europe/Simferopol'), ('Europe/Skopje', 'Europe/Skopje'), ('Europe/Sofia', 'Europe/Sofia'), ('Europe/Stockholm', 'Europe/Stockholm'), ('Europe/Tallinn', 'Europe/Tallinn'), ('Europe/Tirane', 'Europe/Tirane'), ('Europe/Ulyanovsk', 'Europe/Ulyanovsk'), ('Europe/Uzhgorod', 'Europe/Uzhgorod'), ('Europe/Vaduz', 'Europe/Vaduz'), ('Europe/Vatican', 'Europe/Vatican'), ('Europe/Vienna', 'Europe/Vienna'), ('Europe/Vilnius', 'Europe/Vilnius'), ('Europe/Volgograd', 'Europe/Volgograd'), ('Europe/Warsaw', 'Europe/Warsaw'), ('Europe/Zagreb', 'Europe/Zagreb'), ('Europe/Zaporozhye', 'Europe/Zaporozhye'), ('Europe/Zurich', 'Europe/Zurich'), ('GMT', 'GMT'), ('Indian/Antananarivo', 'Indian/Antananarivo'), ('Indian/Chagos', 'Indian/Chagos'), ('Indian/Christmas', 'Indian/Christmas'), ('Indian/Cocos', 'Indian/Cocos'), ('Indian/Comoro', 'Indian/Comoro'), ('Indian/Kerguelen', 'Indian/Kerguelen'), ('Indian/Mahe', 'Indian/Mahe'), ('Indian/Maldives', 'Indian/Maldives'), ('Indian/Mauritius', 'Indian/Mauritius'), ('Indian/Mayotte', 'Indian/Mayotte'), ('Indian/Reunion', 'Indian/Reunion'), ('Pacific/Apia', 'Pacific/Apia'), ('Pacific/Auckland', 'Pacific/Auckland'), ('Pacific/Bougainville', 'Pacific/Bougainville'), ('Pacific/Chatham', 'Pacific/Chatham'), ('Pacific/Chuuk', 'Pacific/Chuuk'), ('Pacific/Easter', 'Pacific/Easter'), ('Pacific/Efate', 'Pacific/Efate'), ('Pacific/Enderbury', 'Pacific/Enderbury'), ('Pacific/Fakaofo', 'Pacific/Fakaofo'), ('Pacific/Fiji', 'Pacific/Fiji'), ('Pacific/Funafuti', 'Pacific/Funafuti'), ('Pacific/Galapagos', 'Pacific/Galapagos'), ('Pacific/Gambier', 'Pacific/Gambier'), ('Pacific/Guadalcanal', 'Pacific/Guadalcanal'), ('Pacific/Guam', 'Pacific/Guam'), ('Pacific/Honolulu', 'Pacific/Honolulu'), ('Pacific/Kiritimati', 'Pacific/Kiritimati'), ('Pacific/Kosrae', 'Pacific/Kosrae'), ('Pacific/Kwajalein', 'Pacific/Kwajalein'), ('Pacific/Majuro', 'Pacific/Majuro'), ('Pacific/Marquesas', 'Pacific/Marquesas'), ('Pacific/Midway', 'Pacific/Midway'), ('Pacific/Nauru', 'Pacific/Nauru'), ('Pacific/Niue', 'Pacific/Niue'), ('Pacific/Norfolk', 'Pacific/Norfolk'), ('Pacific/Noumea', 'Pacific/Noumea'), ('Pacific/Pago_Pago', 'Pacific/Pago_Pago'), ('Pacific/Palau', 'Pacific/Palau'), ('Pacific/Pitcairn', 'Pacific/Pitcairn'), ('Pacific/Pohnpei', 'Pacific/Pohnpei'), ('Pacific/Port_Moresby', 'Pacific/Port_Moresby'), ('Pacific/Rarotonga', 'Pacific/Rarotonga'), ('Pacific/Saipan', 'Pacific/Saipan'), ('Pacific/Tahiti', 'Pacific/Tahiti'), ('Pacific/Tarawa', 'Pacific/Tarawa'), ('Pacific/Tongatapu', 'Pacific/Tongatapu'), ('Pacific/Wake', 'Pacific/Wake'), ('Pacific/Wallis', 'Pacific/Wallis'), ('US/Alaska', 'US/Alaska'), ('US/Arizona', 'US/Arizona'), ('US/Central', 'US/Central'), ('US/Eastern', 'US/Eastern'), ('US/Hawaii', 'US/Hawaii'), ('US/Mountain', 'US/Mountain'), ('US/Pacific', 'US/Pacific'), ('UTC', 'UTC')], default='US/Mountain', max_length=255)),
                ('is_followup', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='CampaignProspect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('phone_raw', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('phone_type', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('phone_type_synced', models.CharField(blank=True, max_length=3, null=True)),
                ('phone_type_checked_datetime', models.DateTimeField(blank=True, null=True)),
                ('phone_carrier', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_caller_id_name', models.CharField(blank=True, max_length=255, null=True)),
                ('campaign_name', models.CharField(blank=True, max_length=255, null=True)),
                ('prospect_name', models.CharField(blank=True, max_length=255, null=True)),
                ('property_address', models.TextField(blank=True, null=True)),
                ('property_city', models.CharField(blank=True, max_length=255, null=True)),
                ('property_state', models.CharField(blank=True, max_length=255, null=True)),
                ('property_zip', models.CharField(blank=True, max_length=255, null=True)),
                ('mailing_address', models.TextField(blank=True, null=True)),
                ('mailing_city', models.CharField(blank=True, max_length=255, null=True)),
                ('mailing_state', models.CharField(blank=True, max_length=255, null=True)),
                ('mailing_zip', models.CharField(blank=True, max_length=255, null=True)),
                ('custom1', models.CharField(blank=True, max_length=255, null=True)),
                ('custom2', models.CharField(blank=True, max_length=255, null=True)),
                ('custom3', models.CharField(blank=True, max_length=255, null=True)),
                ('scheduled', models.BooleanField(default=False)),
                ('skipped', models.BooleanField(default=False)),
                ('skip_reason', models.CharField(blank=True, choices=[('threshold', 'Threshold'), ('has_responded', 'Has responded previously'), ('company_dnc', 'Company DNC'), ('public_dnc', 'Public DNC'), ('litigator', 'Litigator'), ('has_receipt', 'Has SMS Receipt'), ('forced', 'Forced'), ('opt_out_required', 'Opt-out required'), ('carrier_att', 'AT&T')], max_length=16)),
                ('sent', models.BooleanField(default=False)),
                ('sherpa_phone_number', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('sherpa_phone_number_status', models.CharField(blank=True, max_length=255, null=True)),
                ('sms_status', models.CharField(blank=True, max_length=255, null=True)),
                ('has_responded_via_sms', models.CharField(blank=True, max_length=255, null=True)),
                ('has_responded_via_call', models.CharField(blank=True, max_length=255, null=True)),
                ('has_unread_sms', models.BooleanField(db_index=True, default=False)),
                ('send_sms', models.BooleanField(default=False)),
                ('has_delivered_sms_only', models.BooleanField(default=False)),
                ('unread_user_id_array_raw', models.CharField(blank=True, max_length=255, null=True)),
                ('related_record_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('sort_order', models.IntegerField(blank=True, default=1, null=True)),
                ('include_in_skip_trace_cost', models.BooleanField(default=False)),
                ('has_been_viewed', models.BooleanField(default=False)),
                ('last_message_status', models.CharField(blank=True, max_length=64, null=True)),
                ('last_message_error', models.CharField(blank=True, max_length=64, null=True)),
                ('first_message_status', models.CharField(blank=True, max_length=64, null=True)),
                ('first_message_error', models.CharField(blank=True, max_length=64, null=True)),
                ('second_message_status', models.CharField(blank=True, max_length=64, null=True)),
                ('second_message_error', models.CharField(blank=True, max_length=64, null=True)),
                ('put_back_in_pool', models.BooleanField(default=False)),
                ('two_attempts_skip', models.BooleanField(default=False)),
                ('include_in_upload_count', models.BooleanField(default=False)),
                ('count_as_unique', models.BooleanField(default=False)),
                ('is_followup_cp', models.BooleanField(default=False)),
                ('is_litigator', models.BooleanField(default=False)),
                ('is_associated_litigator', models.BooleanField(default=False)),
                ('is_associated_dnc', models.BooleanField(default=False)),
                ('has_responded2', models.BooleanField(default=False)),
                ('has_responded_dead_auto2', models.BooleanField(default=False)),
                ('podio_lead_id', models.CharField(blank=True, max_length=255, null=True)),
                ('podio_app_token', models.CharField(blank=True, max_length=255, null=True)),
                ('podio_app_id', models.CharField(blank=True, max_length=255, null=True)),
                ('podio_url', models.CharField(blank=True, max_length=255, null=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sherpa.Campaign')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('duplicate', 'Duplicate'), ('canceled', 'Cancelled')], default='active', max_length=16)),
                ('default_alternate_message', models.TextField(blank=True, max_length=300, null=True)),
                ('timezone', models.CharField(choices=[('Africa/Abidjan', 'Africa/Abidjan'), ('Africa/Accra', 'Africa/Accra'), ('Africa/Addis_Ababa', 'Africa/Addis_Ababa'), ('Africa/Algiers', 'Africa/Algiers'), ('Africa/Asmara', 'Africa/Asmara'), ('Africa/Bamako', 'Africa/Bamako'), ('Africa/Bangui', 'Africa/Bangui'), ('Africa/Banjul', 'Africa/Banjul'), ('Africa/Bissau', 'Africa/Bissau'), ('Africa/Blantyre', 'Africa/Blantyre'), ('Africa/Brazzaville', 'Africa/Brazzaville'), ('Africa/Bujumbura', 'Africa/Bujumbura'), ('Africa/Cairo', 'Africa/Cairo'), ('Africa/Casablanca', 'Africa/Casablanca'), ('Africa/Ceuta', 'Africa/Ceuta'), ('Africa/Conakry', 'Africa/Conakry'), ('Africa/Dakar', 'Africa/Dakar'), ('Africa/Dar_es_Salaam', 'Africa/Dar_es_Salaam'), ('Africa/Djibouti', 'Africa/Djibouti'), ('Africa/Douala', 'Africa/Douala'), ('Africa/El_Aaiun', 'Africa/El_Aaiun'), ('Africa/Freetown', 'Africa/Freetown'), ('Africa/Gaborone', 'Africa/Gaborone'), ('Africa/Harare', 'Africa/Harare'), ('Africa/Johannesburg', 'Africa/Johannesburg'), ('Africa/Juba', 'Africa/Juba'), ('Africa/Kampala', 'Africa/Kampala'), ('Africa/Khartoum', 'Africa/Khartoum'), ('Africa/Kigali', 'Africa/Kigali'), ('Africa/Kinshasa', 'Africa/Kinshasa'), ('Africa/Lagos', 'Africa/Lagos'), ('Africa/Libreville', 'Africa/Libreville'), ('Africa/Lome', 'Africa/Lome'), ('Africa/Luanda', 'Africa/Luanda'), ('Africa/Lubumbashi', 'Africa/Lubumbashi'), ('Africa/Lusaka', 'Africa/Lusaka'), ('Africa/Malabo', 'Africa/Malabo'), ('Africa/Maputo', 'Africa/Maputo'), ('Africa/Maseru', 'Africa/Maseru'), ('Africa/Mbabane', 'Africa/Mbabane'), ('Africa/Mogadishu', 'Africa/Mogadishu'), ('Africa/Monrovia', 'Africa/Monrovia'), ('Africa/Nairobi', 'Africa/Nairobi'), ('Africa/Ndjamena', 'Africa/Ndjamena'), ('Africa/Niamey', 'Africa/Niamey'), ('Africa/Nouakchott', 'Africa/Nouakchott'), ('Africa/Ouagadougou', 'Africa/Ouagadougou'), ('Africa/Porto-Novo', 'Africa/Porto-Novo'), ('Africa/Sao_Tome', 'Africa/Sao_Tome'), ('Africa/Tripoli', 'Africa/Tripoli'), ('Africa/Tunis', 'Africa/Tunis'), ('Africa/Windhoek', 'Africa/Windhoek'), ('America/Adak', 'America/Adak'), ('America/Anchorage', 'America/Anchorage'), ('America/Anguilla', 'America/Anguilla'), ('America/Antigua', 'America/Antigua'), ('America/Araguaina', 'America/Araguaina'), ('America/Argentina/Buenos_Aires', 'America/Argentina/Buenos_Aires'), ('America/Argentina/Catamarca', 'America/Argentina/Catamarca'), ('America/Argentina/Cordoba', 'America/Argentina/Cordoba'), ('America/Argentina/Jujuy', 'America/Argentina/Jujuy'), ('America/Argentina/La_Rioja', 'America/Argentina/La_Rioja'), ('America/Argentina/Mendoza', 'America/Argentina/Mendoza'), ('America/Argentina/Rio_Gallegos', 'America/Argentina/Rio_Gallegos'), ('America/Argentina/Salta', 'America/Argentina/Salta'), ('America/Argentina/San_Juan', 'America/Argentina/San_Juan'), ('America/Argentina/San_Luis', 'America/Argentina/San_Luis'), ('America/Argentina/Tucuman', 'America/Argentina/Tucuman'), ('America/Argentina/Ushuaia', 'America/Argentina/Ushuaia'), ('America/Aruba', 'America/Aruba'), ('America/Asuncion', 'America/Asuncion'), ('America/Atikokan', 'America/Atikokan'), ('America/Bahia', 'America/Bahia'), ('America/Bahia_Banderas', 'America/Bahia_Banderas'), ('America/Barbados', 'America/Barbados'), ('America/Belem', 'America/Belem'), ('America/Belize', 'America/Belize'), ('America/Blanc-Sablon', 'America/Blanc-Sablon'), ('America/Boa_Vista', 'America/Boa_Vista'), ('America/Bogota', 'America/Bogota'), ('America/Boise', 'America/Boise'), ('America/Cambridge_Bay', 'America/Cambridge_Bay'), ('America/Campo_Grande', 'America/Campo_Grande'), ('America/Cancun', 'America/Cancun'), ('America/Caracas', 'America/Caracas'), ('America/Cayenne', 'America/Cayenne'), ('America/Cayman', 'America/Cayman'), ('America/Chicago', 'America/Chicago'), ('America/Chihuahua', 'America/Chihuahua'), ('America/Costa_Rica', 'America/Costa_Rica'), ('America/Creston', 'America/Creston'), ('America/Cuiaba', 'America/Cuiaba'), ('America/Curacao', 'America/Curacao'), ('America/Danmarkshavn', 'America/Danmarkshavn'), ('America/Dawson', 'America/Dawson'), ('America/Dawson_Creek', 'America/Dawson_Creek'), ('America/Denver', 'America/Denver'), ('America/Detroit', 'America/Detroit'), ('America/Dominica', 'America/Dominica'), ('America/Edmonton', 'America/Edmonton'), ('America/Eirunepe', 'America/Eirunepe'), ('America/El_Salvador', 'America/El_Salvador'), ('America/Fort_Nelson', 'America/Fort_Nelson'), ('America/Fortaleza', 'America/Fortaleza'), ('America/Glace_Bay', 'America/Glace_Bay'), ('America/Godthab', 'America/Godthab'), ('America/Goose_Bay', 'America/Goose_Bay'), ('America/Grand_Turk', 'America/Grand_Turk'), ('America/Grenada', 'America/Grenada'), ('America/Guadeloupe', 'America/Guadeloupe'), ('America/Guatemala', 'America/Guatemala'), ('America/Guayaquil', 'America/Guayaquil'), ('America/Guyana', 'America/Guyana'), ('America/Halifax', 'America/Halifax'), ('America/Havana', 'America/Havana'), ('America/Hermosillo', 'America/Hermosillo'), ('America/Indiana/Indianapolis', 'America/Indiana/Indianapolis'), ('America/Indiana/Knox', 'America/Indiana/Knox'), ('America/Indiana/Marengo', 'America/Indiana/Marengo'), ('America/Indiana/Petersburg', 'America/Indiana/Petersburg'), ('America/Indiana/Tell_City', 'America/Indiana/Tell_City'), ('America/Indiana/Vevay', 'America/Indiana/Vevay'), ('America/Indiana/Vincennes', 'America/Indiana/Vincennes'), ('America/Indiana/Winamac', 'America/Indiana/Winamac'), ('America/Inuvik', 'America/Inuvik'), ('America/Iqaluit', 'America/Iqaluit'), ('America/Jamaica', 'America/Jamaica'), ('America/Juneau', 'America/Juneau'), ('America/Kentucky/Louisville', 'America/Kentucky/Louisville'), ('America/Kentucky/Monticello', 'America/Kentucky/Monticello'), ('America/Kralendijk', 'America/Kralendijk'), ('America/La_Paz', 'America/La_Paz'), ('America/Lima', 'America/Lima'), ('America/Los_Angeles', 'America/Los_Angeles'), ('America/Lower_Princes', 'America/Lower_Princes'), ('America/Maceio', 'America/Maceio'), ('America/Managua', 'America/Managua'), ('America/Manaus', 'America/Manaus'), ('America/Marigot', 'America/Marigot'), ('America/Martinique', 'America/Martinique'), ('America/Matamoros', 'America/Matamoros'), ('America/Mazatlan', 'America/Mazatlan'), ('America/Menominee', 'America/Menominee'), ('America/Merida', 'America/Merida'), ('America/Metlakatla', 'America/Metlakatla'), ('America/Mexico_City', 'America/Mexico_City'), ('America/Miquelon', 'America/Miquelon'), ('America/Moncton', 'America/Moncton'), ('America/Monterrey', 'America/Monterrey'), ('America/Montevideo', 'America/Montevideo'), ('America/Montserrat', 'America/Montserrat'), ('America/Nassau', 'America/Nassau'), ('America/New_York', 'America/New_York'), ('America/Nipigon', 'America/Nipigon'), ('America/Nome', 'America/Nome'), ('America/Noronha', 'America/Noronha'), ('America/North_Dakota/Beulah', 'America/North_Dakota/Beulah'), ('America/North_Dakota/Center', 'America/North_Dakota/Center'), ('America/North_Dakota/New_Salem', 'America/North_Dakota/New_Salem'), ('America/Ojinaga', 'America/Ojinaga'), ('America/Panama', 'America/Panama'), ('America/Pangnirtung', 'America/Pangnirtung'), ('America/Paramaribo', 'America/Paramaribo'), ('America/Phoenix', 'America/Phoenix'), ('America/Port-au-Prince', 'America/Port-au-Prince'), ('America/Port_of_Spain', 'America/Port_of_Spain'), ('America/Porto_Velho', 'America/Porto_Velho'), ('America/Puerto_Rico', 'America/Puerto_Rico'), ('America/Punta_Arenas', 'America/Punta_Arenas'), ('America/Rainy_River', 'America/Rainy_River'), ('America/Rankin_Inlet', 'America/Rankin_Inlet'), ('America/Recife', 'America/Recife'), ('America/Regina', 'America/Regina'), ('America/Resolute', 'America/Resolute'), ('America/Rio_Branco', 'America/Rio_Branco'), ('America/Santarem', 'America/Santarem'), ('America/Santiago', 'America/Santiago'), ('America/Santo_Domingo', 'America/Santo_Domingo'), ('America/Sao_Paulo', 'America/Sao_Paulo'), ('America/Scoresbysund', 'America/Scoresbysund'), ('America/Sitka', 'America/Sitka'), ('America/St_Barthelemy', 'America/St_Barthelemy'), ('America/St_Johns', 'America/St_Johns'), ('America/St_Kitts', 'America/St_Kitts'), ('America/St_Lucia', 'America/St_Lucia'), ('America/St_Thomas', 'America/St_Thomas'), ('America/St_Vincent', 'America/St_Vincent'), ('America/Swift_Current', 'America/Swift_Current'), ('America/Tegucigalpa', 'America/Tegucigalpa'), ('America/Thule', 'America/Thule'), ('America/Thunder_Bay', 'America/Thunder_Bay'), ('America/Tijuana', 'America/Tijuana'), ('America/Toronto', 'America/Toronto'), ('America/Tortola', 'America/Tortola'), ('America/Vancouver', 'America/Vancouver'), ('America/Whitehorse', 'America/Whitehorse'), ('America/Winnipeg', 'America/Winnipeg'), ('America/Yakutat', 'America/Yakutat'), ('America/Yellowknife', 'America/Yellowknife'), ('Antarctica/Casey', 'Antarctica/Casey'), ('Antarctica/Davis', 'Antarctica/Davis'), ('Antarctica/DumontDUrville', 'Antarctica/DumontDUrville'), ('Antarctica/Macquarie', 'Antarctica/Macquarie'), ('Antarctica/Mawson', 'Antarctica/Mawson'), ('Antarctica/McMurdo', 'Antarctica/McMurdo'), ('Antarctica/Palmer', 'Antarctica/Palmer'), ('Antarctica/Rothera', 'Antarctica/Rothera'), ('Antarctica/Syowa', 'Antarctica/Syowa'), ('Antarctica/Troll', 'Antarctica/Troll'), ('Antarctica/Vostok', 'Antarctica/Vostok'), ('Arctic/Longyearbyen', 'Arctic/Longyearbyen'), ('Asia/Aden', 'Asia/Aden'), ('Asia/Almaty', 'Asia/Almaty'), ('Asia/Amman', 'Asia/Amman'), ('Asia/Anadyr', 'Asia/Anadyr'), ('Asia/Aqtau', 'Asia/Aqtau'), ('Asia/Aqtobe', 'Asia/Aqtobe'), ('Asia/Ashgabat', 'Asia/Ashgabat'), ('Asia/Atyrau', 'Asia/Atyrau'), ('Asia/Baghdad', 'Asia/Baghdad'), ('Asia/Bahrain', 'Asia/Bahrain'), ('Asia/Baku', 'Asia/Baku'), ('Asia/Bangkok', 'Asia/Bangkok'), ('Asia/Barnaul', 'Asia/Barnaul'), ('Asia/Beirut', 'Asia/Beirut'), ('Asia/Bishkek', 'Asia/Bishkek'), ('Asia/Brunei', 'Asia/Brunei'), ('Asia/Chita', 'Asia/Chita'), ('Asia/Choibalsan', 'Asia/Choibalsan'), ('Asia/Colombo', 'Asia/Colombo'), ('Asia/Damascus', 'Asia/Damascus'), ('Asia/Dhaka', 'Asia/Dhaka'), ('Asia/Dili', 'Asia/Dili'), ('Asia/Dubai', 'Asia/Dubai'), ('Asia/Dushanbe', 'Asia/Dushanbe'), ('Asia/Famagusta', 'Asia/Famagusta'), ('Asia/Gaza', 'Asia/Gaza'), ('Asia/Hebron', 'Asia/Hebron'), ('Asia/Ho_Chi_Minh', 'Asia/Ho_Chi_Minh'), ('Asia/Hong_Kong', 'Asia/Hong_Kong'), ('Asia/Hovd', 'Asia/Hovd'), ('Asia/Irkutsk', 'Asia/Irkutsk'), ('Asia/Jakarta', 'Asia/Jakarta'), ('Asia/Jayapura', 'Asia/Jayapura'), ('Asia/Jerusalem', 'Asia/Jerusalem'), ('Asia/Kabul', 'Asia/Kabul'), ('Asia/Kamchatka', 'Asia/Kamchatka'), ('Asia/Karachi', 'Asia/Karachi'), ('Asia/Kathmandu', 'Asia/Kathmandu'), ('Asia/Khandyga', 'Asia/Khandyga'), ('Asia/Kolkata', 'Asia/Kolkata'), ('Asia/Krasnoyarsk', 'Asia/Krasnoyarsk'), ('Asia/Kuala_Lumpur', 'Asia/Kuala_Lumpur'), ('Asia/Kuching', 'Asia/Kuching'), ('Asia/Kuwait', 'Asia/Kuwait'), ('Asia/Macau', 'Asia/Macau'), ('Asia/Magadan', 'Asia/Magadan'), ('Asia/Makassar', 'Asia/Makassar'), ('Asia/Manila', 'Asia/Manila'), ('Asia/Muscat', 'Asia/Muscat'), ('Asia/Nicosia', 'Asia/Nicosia'), ('Asia/Novokuznetsk', 'Asia/Novokuznetsk'), ('Asia/Novosibirsk', 'Asia/Novosibirsk'), ('Asia/Omsk', 'Asia/Omsk'), ('Asia/Oral', 'Asia/Oral'), ('Asia/Phnom_Penh', 'Asia/Phnom_Penh'), ('Asia/Pontianak', 'Asia/Pontianak'), ('Asia/Pyongyang', 'Asia/Pyongyang'), ('Asia/Qatar', 'Asia/Qatar'), ('Asia/Qostanay', 'Asia/Qostanay'), ('Asia/Qyzylorda', 'Asia/Qyzylorda'), ('Asia/Riyadh', 'Asia/Riyadh'), ('Asia/Sakhalin', 'Asia/Sakhalin'), ('Asia/Samarkand', 'Asia/Samarkand'), ('Asia/Seoul', 'Asia/Seoul'), ('Asia/Shanghai', 'Asia/Shanghai'), ('Asia/Singapore', 'Asia/Singapore'), ('Asia/Srednekolymsk', 'Asia/Srednekolymsk'), ('Asia/Taipei', 'Asia/Taipei'), ('Asia/Tashkent', 'Asia/Tashkent'), ('Asia/Tbilisi', 'Asia/Tbilisi'), ('Asia/Tehran', 'Asia/Tehran'), ('Asia/Thimphu', 'Asia/Thimphu'), ('Asia/Tokyo', 'Asia/Tokyo'), ('Asia/Tomsk', 'Asia/Tomsk'), ('Asia/Ulaanbaatar', 'Asia/Ulaanbaatar'), ('Asia/Urumqi', 'Asia/Urumqi'), ('Asia/Ust-Nera', 'Asia/Ust-Nera'), ('Asia/Vientiane', 'Asia/Vientiane'), ('Asia/Vladivostok', 'Asia/Vladivostok'), ('Asia/Yakutsk', 'Asia/Yakutsk'), ('Asia/Yangon', 'Asia/Yangon'), ('Asia/Yekaterinburg', 'Asia/Yekaterinburg'), ('Asia/Yerevan', 'Asia/Yerevan'), ('Atlantic/Azores', 'Atlantic/Azores'), ('Atlantic/Bermuda', 'Atlantic/Bermuda'), ('Atlantic/Canary', 'Atlantic/Canary'), ('Atlantic/Cape_Verde', 'Atlantic/Cape_Verde'), ('Atlantic/Faroe', 'Atlantic/Faroe'), ('Atlantic/Madeira', 'Atlantic/Madeira'), ('Atlantic/Reykjavik', 'Atlantic/Reykjavik'), ('Atlantic/South_Georgia', 'Atlantic/South_Georgia'), ('Atlantic/St_Helena', 'Atlantic/St_Helena'), ('Atlantic/Stanley', 'Atlantic/Stanley'), ('Australia/Adelaide', 'Australia/Adelaide'), ('Australia/Brisbane', 'Australia/Brisbane'), ('Australia/Broken_Hill', 'Australia/Broken_Hill'), ('Australia/Currie', 'Australia/Currie'), ('Australia/Darwin', 'Australia/Darwin'), ('Australia/Eucla', 'Australia/Eucla'), ('Australia/Hobart', 'Australia/Hobart'), ('Australia/Lindeman', 'Australia/Lindeman'), ('Australia/Lord_Howe', 'Australia/Lord_Howe'), ('Australia/Melbourne', 'Australia/Melbourne'), ('Australia/Perth', 'Australia/Perth'), ('Australia/Sydney', 'Australia/Sydney'), ('Canada/Atlantic', 'Canada/Atlantic'), ('Canada/Central', 'Canada/Central'), ('Canada/Eastern', 'Canada/Eastern'), ('Canada/Mountain', 'Canada/Mountain'), ('Canada/Newfoundland', 'Canada/Newfoundland'), ('Canada/Pacific', 'Canada/Pacific'), ('Europe/Amsterdam', 'Europe/Amsterdam'), ('Europe/Andorra', 'Europe/Andorra'), ('Europe/Astrakhan', 'Europe/Astrakhan'), ('Europe/Athens', 'Europe/Athens'), ('Europe/Belgrade', 'Europe/Belgrade'), ('Europe/Berlin', 'Europe/Berlin'), ('Europe/Bratislava', 'Europe/Bratislava'), ('Europe/Brussels', 'Europe/Brussels'), ('Europe/Bucharest', 'Europe/Bucharest'), ('Europe/Budapest', 'Europe/Budapest'), ('Europe/Busingen', 'Europe/Busingen'), ('Europe/Chisinau', 'Europe/Chisinau'), ('Europe/Copenhagen', 'Europe/Copenhagen'), ('Europe/Dublin', 'Europe/Dublin'), ('Europe/Gibraltar', 'Europe/Gibraltar'), ('Europe/Guernsey', 'Europe/Guernsey'), ('Europe/Helsinki', 'Europe/Helsinki'), ('Europe/Isle_of_Man', 'Europe/Isle_of_Man'), ('Europe/Istanbul', 'Europe/Istanbul'), ('Europe/Jersey', 'Europe/Jersey'), ('Europe/Kaliningrad', 'Europe/Kaliningrad'), ('Europe/Kiev', 'Europe/Kiev'), ('Europe/Kirov', 'Europe/Kirov'), ('Europe/Lisbon', 'Europe/Lisbon'), ('Europe/Ljubljana', 'Europe/Ljubljana'), ('Europe/London', 'Europe/London'), ('Europe/Luxembourg', 'Europe/Luxembourg'), ('Europe/Madrid', 'Europe/Madrid'), ('Europe/Malta', 'Europe/Malta'), ('Europe/Mariehamn', 'Europe/Mariehamn'), ('Europe/Minsk', 'Europe/Minsk'), ('Europe/Monaco', 'Europe/Monaco'), ('Europe/Moscow', 'Europe/Moscow'), ('Europe/Oslo', 'Europe/Oslo'), ('Europe/Paris', 'Europe/Paris'), ('Europe/Podgorica', 'Europe/Podgorica'), ('Europe/Prague', 'Europe/Prague'), ('Europe/Riga', 'Europe/Riga'), ('Europe/Rome', 'Europe/Rome'), ('Europe/Samara', 'Europe/Samara'), ('Europe/San_Marino', 'Europe/San_Marino'), ('Europe/Sarajevo', 'Europe/Sarajevo'), ('Europe/Saratov', 'Europe/Saratov'), ('Europe/Simferopol', 'Europe/Simferopol'), ('Europe/Skopje', 'Europe/Skopje'), ('Europe/Sofia', 'Europe/Sofia'), ('Europe/Stockholm', 'Europe/Stockholm'), ('Europe/Tallinn', 'Europe/Tallinn'), ('Europe/Tirane', 'Europe/Tirane'), ('Europe/Ulyanovsk', 'Europe/Ulyanovsk'), ('Europe/Uzhgorod', 'Europe/Uzhgorod'), ('Europe/Vaduz', 'Europe/Vaduz'), ('Europe/Vatican', 'Europe/Vatican'), ('Europe/Vienna', 'Europe/Vienna'), ('Europe/Vilnius', 'Europe/Vilnius'), ('Europe/Volgograd', 'Europe/Volgograd'), ('Europe/Warsaw', 'Europe/Warsaw'), ('Europe/Zagreb', 'Europe/Zagreb'), ('Europe/Zaporozhye', 'Europe/Zaporozhye'), ('Europe/Zurich', 'Europe/Zurich'), ('GMT', 'GMT'), ('Indian/Antananarivo', 'Indian/Antananarivo'), ('Indian/Chagos', 'Indian/Chagos'), ('Indian/Christmas', 'Indian/Christmas'), ('Indian/Cocos', 'Indian/Cocos'), ('Indian/Comoro', 'Indian/Comoro'), ('Indian/Kerguelen', 'Indian/Kerguelen'), ('Indian/Mahe', 'Indian/Mahe'), ('Indian/Maldives', 'Indian/Maldives'), ('Indian/Mauritius', 'Indian/Mauritius'), ('Indian/Mayotte', 'Indian/Mayotte'), ('Indian/Reunion', 'Indian/Reunion'), ('Pacific/Apia', 'Pacific/Apia'), ('Pacific/Auckland', 'Pacific/Auckland'), ('Pacific/Bougainville', 'Pacific/Bougainville'), ('Pacific/Chatham', 'Pacific/Chatham'), ('Pacific/Chuuk', 'Pacific/Chuuk'), ('Pacific/Easter', 'Pacific/Easter'), ('Pacific/Efate', 'Pacific/Efate'), ('Pacific/Enderbury', 'Pacific/Enderbury'), ('Pacific/Fakaofo', 'Pacific/Fakaofo'), ('Pacific/Fiji', 'Pacific/Fiji'), ('Pacific/Funafuti', 'Pacific/Funafuti'), ('Pacific/Galapagos', 'Pacific/Galapagos'), ('Pacific/Gambier', 'Pacific/Gambier'), ('Pacific/Guadalcanal', 'Pacific/Guadalcanal'), ('Pacific/Guam', 'Pacific/Guam'), ('Pacific/Honolulu', 'Pacific/Honolulu'), ('Pacific/Kiritimati', 'Pacific/Kiritimati'), ('Pacific/Kosrae', 'Pacific/Kosrae'), ('Pacific/Kwajalein', 'Pacific/Kwajalein'), ('Pacific/Majuro', 'Pacific/Majuro'), ('Pacific/Marquesas', 'Pacific/Marquesas'), ('Pacific/Midway', 'Pacific/Midway'), ('Pacific/Nauru', 'Pacific/Nauru'), ('Pacific/Niue', 'Pacific/Niue'), ('Pacific/Norfolk', 'Pacific/Norfolk'), ('Pacific/Noumea', 'Pacific/Noumea'), ('Pacific/Pago_Pago', 'Pacific/Pago_Pago'), ('Pacific/Palau', 'Pacific/Palau'), ('Pacific/Pitcairn', 'Pacific/Pitcairn'), ('Pacific/Pohnpei', 'Pacific/Pohnpei'), ('Pacific/Port_Moresby', 'Pacific/Port_Moresby'), ('Pacific/Rarotonga', 'Pacific/Rarotonga'), ('Pacific/Saipan', 'Pacific/Saipan'), ('Pacific/Tahiti', 'Pacific/Tahiti'), ('Pacific/Tarawa', 'Pacific/Tarawa'), ('Pacific/Tongatapu', 'Pacific/Tongatapu'), ('Pacific/Wake', 'Pacific/Wake'), ('Pacific/Wallis', 'Pacific/Wallis'), ('US/Alaska', 'US/Alaska'), ('US/Arizona', 'US/Arizona'), ('US/Central', 'US/Central'), ('US/Eastern', 'US/Eastern'), ('US/Hawaii', 'US/Hawaii'), ('US/Mountain', 'US/Mountain'), ('US/Pacific', 'US/Pacific'), ('UTC', 'UTC')], default='US/Mountain', max_length=64)),
                ('timezone_confirmed', models.BooleanField(default=False)),
                ('monthly_upload_limit', models.IntegerField(default=25000)),
                ('cost_per_upload', models.DecimalField(decimal_places=2, default=0.05, max_digits=2)),
                ('sherpa_balance', models.IntegerField(default=0)),
                ('affiliate_option_selected', models.IntegerField(default=0)),
                ('admin_name', models.CharField(blank=True, max_length=64, null=True)),
                ('total_intial_sms_sent_today_count', models.PositiveSmallIntegerField(default=0)),
                ('is_affiliate', models.BooleanField(default=False)),
                ('real_estate_experience_rating', models.IntegerField(default=0)),
                ('how_did_you_hear', models.CharField(blank=True, max_length=255, null=True)),
                ('braintree_id', models.CharField(blank=True, max_length=10, null=True)),
                ('subscription_id', models.CharField(blank=True, max_length=6, null=True)),
                ('subscription_signup_date', models.DateTimeField(auto_now_add=True)),
                ('subscription_status', models.CharField(blank=True, choices=[('active', 'Active'), ('canceled', 'Canceled'), ('past_due', 'Past Due'), ('paused', 'Paused')], max_length=16, null=True)),
                ('show_getting_started_billing', models.BooleanField(default=True)),
                ('next_billing_date', models.DateField(blank=True, null=True)),
                ('threshold_exempt', models.BooleanField(default=False)),
                ('threshold_days', models.PositiveSmallIntegerField(default=5)),
                ('skip_opt_out', models.BooleanField(default=False)),
                ('has_cancellation_request', models.BooleanField(default=False)),
                ('cancellation_date', models.DateField(blank=True, null=True)),
                ('is_free_beta', models.BooleanField(default=False)),
                ('testing', models.TextField(blank=True, null=True)),
                ('is_test_company', models.BooleanField(default=False)),
                ('twilio_account_sid', models.CharField(blank=True, max_length=34)),
                ('twilio_auth_token', models.CharField(blank=True, max_length=32)),
                ('call_forwarding_number', models.CharField(blank=True, max_length=16, null=True)),
                ('messaging_provider', models.CharField(choices=[('twilio', 'Twilio'), ('telnyx', 'Telnyx')], default='telnyx', max_length=16)),
            ],
            options={
                'verbose_name_plural': 'companies',
            },
        ),
        migrations.CreateModel(
            name='DashboardData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(blank=True, max_length=125, null=True)),
                ('avg_response_time_minutes', models.CharField(blank=True, max_length=16, null=True)),
                ('min_response_time_minutes', models.CharField(blank=True, max_length=16, null=True)),
                ('max_response_time_minutes', models.CharField(blank=True, max_length=16, null=True)),
                ('sherpa_messages_sent_count', models.CharField(blank=True, max_length=16, null=True)),
                ('sherpa_messages_send_attempts_count', models.CharField(blank=True, max_length=16, null=True)),
                ('sherpa_messages_send_delivered_count', models.CharField(blank=True, max_length=16, null=True)),
                ('lead_count', models.CharField(blank=True, max_length=16, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IncomingCall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('from_number', models.CharField(blank=True, max_length=255, null=True)),
                ('to_number', models.CharField(blank=True, max_length=255, null=True)),
                ('vm_url', models.URLField(blank=True, null=True)),
                ('transcript', models.TextField(blank=True, null=True)),
                ('twilio_call_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('posted_to_podio', models.DateTimeField(blank=True, null=True)),
                ('is_update_campaign_call_response_sent', models.CharField(default='NO', max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='InvitationCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=16, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('subscription_plan_id', models.CharField(blank=True, max_length=125, null=True)),
                ('plan_signup_description', models.CharField(blank=True, max_length=125, null=True)),
                ('monthly_upload_limit', models.IntegerField(default=25000)),
                ('is_skip_trace_invitation', models.BooleanField(default=False)),
                ('skip_trace_price', models.DecimalField(decimal_places=2, default=Decimal('0.15'), max_digits=3)),
                ('is_affiliate_plan', models.BooleanField(default=False)),
                ('option_1_affiliate_subscription_plan_id', models.CharField(blank=True, default='affilliate-500', max_length=125, null=True)),
                ('option_1_affiliate_plan_signup_description', models.CharField(blank=True, default='Special $500/mo. | 10k uploads mo.', max_length=125, null=True)),
                ('option_1_affiliate_monthly_upload_limit', models.IntegerField(default=10000)),
                ('option_2_affiliate_subscription_plan_id', models.CharField(blank=True, default='affilliate-1000', max_length=125, null=True)),
                ('option_2_affiliate_plan_signup_description', models.CharField(blank=True, default='Special $1000/mo. | 25k uploads mo.', max_length=125, null=True)),
                ('option_2_affiliate_monthly_upload_limit', models.IntegerField(default=25000)),
            ],
        ),
        migrations.CreateModel(
            name='LeadStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('is_custom', models.BooleanField(default=False)),
                ('lead_stage_title', models.CharField(max_length=32)),
                ('lead_stage_number', models.IntegerField(default=1)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='LitigatorList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('phone', models.CharField(db_index=True, max_length=16, unique=True)),
                ('type', models.CharField(blank=True, choices=[('Litigator', 'Litigator'), ('Complainer', 'Complainer')], max_length=16, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('request_status', models.CharField(blank=True, max_length=255, null=True)),
                ('area_code1', models.CharField(blank=True, max_length=3, null=True)),
                ('area_code2', models.CharField(blank=True, max_length=3, null=True)),
                ('last_index_assigned', models.IntegerField(default=0)),
                ('call_forwarding_number', models.CharField(blank=True, max_length=255, null=True)),
                ('last_sms_delay_sent', models.DateTimeField(blank=True, null=True)),
                ('total_intial_sms_sent_today_count', models.IntegerField(default=0)),
                ('check_twilio_phone_balance', models.BooleanField(default=True)),
                ('messaging_profile_id', models.CharField(blank=True, max_length=36)),
                ('total_active_twilio_phone_maintanance', models.IntegerField(default=20)),
                ('twilio_phone_budget', models.IntegerField(default=50)),
                ('one_time_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('monthly_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
                ('one_time_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='billing.Transaction')),
                ('parent_market', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.AreaCodeState')),
                ('requested_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('phone', models.CharField(db_index=True, max_length=16)),
                ('twilio_sid_archive', models.CharField(blank=True, max_length=36)),
                ('provider_id', models.CharField(max_length=125)),
                ('timezone', models.CharField(default='US/Mountain', max_length=255)),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending'), ('inactive', 'Inactive'), ('release_pending1', 'Pending1'), ('release_pending2', 'Pending2'), ('released', 'Released')], db_index=True, default='active', max_length=16)),
                ('provider', models.CharField(choices=[('twilio', 'Twilio'), ('telnyx', 'Telnyx')], default='telnyx', max_length=16)),
                ('last_send_utc', models.DateTimeField(blank=True, null=True)),
                ('last_received_utc', models.DateTimeField(blank=True, null=True)),
                ('last_send_local', models.DateTimeField(blank=True, null=True)),
                ('last_received_local', models.DateTimeField(blank=True, null=True)),
                ('total_sent', models.IntegerField(default=0)),
                ('total_sent_today', models.IntegerField(default=0)),
                ('total_received', models.IntegerField(default=0)),
                ('total_received_today', models.IntegerField(default=0)),
                ('total_30007_errors', models.IntegerField(default=0)),
                ('total_30003_errors', models.IntegerField(default=0)),
                ('total_30003_ATT_errors', models.IntegerField(default=0)),
                ('total_30005_errors', models.IntegerField(default=0)),
                ('total_other_errors', models.IntegerField(default=0)),
                ('total_opt_outs', models.IntegerField(default=0)),
                ('total_auto_dead', models.IntegerField(default=0)),
                ('deactivated_utc', models.DateTimeField(blank=True, null=True)),
                ('cooldown_start_utc', models.DateTimeField(blank=True, null=True)),
                ('cooldown_end_utc', models.DateTimeField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='twilio_numbers', to='sherpa.Company')),
                ('market', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='twilio_numbers', to='sherpa.Market')),
            ],
        ),
        migrations.CreateModel(
            name='Prospect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('fullname', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_raw', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('phone_formatted_display', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_formatted_twilio', models.CharField(blank=True, max_length=255, null=True)),
                ('property_address', models.TextField(blank=True, null=True)),
                ('property_city', models.CharField(blank=True, max_length=255, null=True)),
                ('property_state', models.CharField(blank=True, max_length=255, null=True)),
                ('property_zip', models.CharField(blank=True, max_length=255, null=True)),
                ('mailing_address', models.TextField(blank=True, null=True)),
                ('mailing_city', models.CharField(blank=True, max_length=255, null=True)),
                ('mailing_state', models.CharField(blank=True, max_length=255, null=True)),
                ('mailing_zip', models.CharField(blank=True, max_length=255, null=True)),
                ('custom1', models.CharField(blank=True, max_length=512, null=True)),
                ('custom2', models.CharField(blank=True, max_length=512, null=True)),
                ('custom3', models.CharField(blank=True, max_length=512, null=True)),
                ('custom4', models.CharField(blank=True, max_length=512, null=True)),
                ('is_phone_type_checked', models.BooleanField(default=False)),
                ('phone_type_checked_datetime', models.DateTimeField(blank=True, null=True)),
                ('phone_type', models.CharField(blank=True, choices=[('voip', 'VOIP'), ('mobile', 'Mobile'), ('landline', 'Landline'), ('error', 'Error'), ('na', 'Not Applicable')], max_length=16, null=True)),
                ('phone_carrier', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_caller_id_name', models.CharField(blank=True, max_length=255, null=True)),
                ('has_unread_sms', models.BooleanField(default=False)),
                ('wrong_number', models.BooleanField(default=False)),
                ('do_not_call', models.BooleanField(default=False)),
                ('synced_dnc', models.BooleanField(default=False)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('sherpa_phone_number', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('sherpa_phone_number_status', models.CharField(blank=True, max_length=255, null=True)),
                ('is_priority', models.BooleanField(db_index=True, default=False)),
                ('is_qualified_lead', models.BooleanField(default=False)),
                ('qualified_lead_dt', models.DateTimeField(blank=True, null=True)),
                ('token', models.CharField(blank=True, db_index=True, default=uuid.uuid4, max_length=40, null=True)),
                ('has_reminder', models.BooleanField(default=False)),
                ('reminder_date_local', models.DateTimeField(blank=True, null=True)),
                ('reminder_date_utc', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('reminder_tz', models.CharField(blank=True, max_length=255, null=True)),
                ('reminder_email_sent', models.BooleanField(default=False)),
                ('reminder_email_address', models.CharField(blank=True, max_length=255, null=True)),
                ('has_responded_via_sms', models.CharField(blank=True, max_length=255, null=True)),
                ('saved_to_zapier_dt', models.DateTimeField(blank=True, null=True)),
                ('related_record_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('owner_verified_status', models.CharField(choices=[('open', 'Open'), ('verified', 'Verified'), ('unverified', 'Unverified')], default='open', max_length=16)),
                ('emailed_lead_to_podio_dt', models.DateTimeField(blank=True, null=True)),
                ('send_notification_dt', models.DateTimeField(blank=True, null=True)),
                ('total_sms_sent_count', models.IntegerField(default=0)),
                ('total_sms_received_count', models.IntegerField(default=0)),
                ('total_sms_sent_received_count', models.IntegerField(default=0)),
                ('last_sms_sent_utc', models.DateTimeField(blank=True, null=True)),
                ('last_sms_received_utc', models.DateTimeField(blank=True, null=True)),
                ('has_sms_send_received_checked', models.BooleanField(default=False)),
                ('call_forward_number', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_status', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('validated_property_delivery_line_1', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('validated_property_delivery_line_2', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('validated_property_last_line', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_primary_number', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_street_name', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_street_predirection', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_street_postdirection', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_street_suffix', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_secondary_number', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_secondary_designator', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_extra_secondary_number', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_extra_secondary_designator', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_pmb_designator', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_pmb_number', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_city_name', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_default_city_name', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_state_abbreviation', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_zipcode', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_plus4_code', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_latitude', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_longitude', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_precision', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_time_zone', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_utc_offset', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_vacant', models.CharField(blank=True, max_length=16, null=True)),
                ('last_message_status', models.CharField(blank=True, choices=[('sent', 'Sent'), ('failed', 'Failed'), ('delivered', 'Delivered'), ('undelivered', 'Undelivered')], max_length=16, null=True)),
                ('last_message_error', models.CharField(blank=True, max_length=64, null=True)),
                ('saved_to_podio', models.BooleanField(default=False)),
                ('podio_lead_id', models.CharField(blank=True, max_length=255, null=True)),
                ('podio_app_token', models.CharField(blank=True, max_length=255, null=True)),
                ('podio_app_id', models.CharField(blank=True, max_length=255, null=True)),
                ('podio_url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='SkipTracePrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.15, max_digits=4)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
            ],
        ),
        migrations.CreateModel(
            name='SMSMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_message_id', models.CharField(blank=True, db_index=True, max_length=64)),
                ('dt', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('dt_local', models.DateTimeField(blank=True, null=True)),
                ('contact_number', models.CharField(db_index=True, max_length=255)),
                ('our_number', models.CharField(max_length=255)),
                ('from_number', models.CharField(db_index=True, max_length=255)),
                ('to_number', models.CharField(max_length=255)),
                ('message', models.TextField(max_length=300)),
                ('unread_by_recipient', models.BooleanField(default=False)),
                ('unread_alert_sent', models.BooleanField(default=False)),
                ('num_media', models.CharField(blank=True, max_length=255, null=True)),
                ('media_url', models.CharField(blank=True, max_length=255, null=True)),
                ('file_extension', models.CharField(blank=True, max_length=255, null=True)),
                ('unread_alert_might_be_stuck', models.BooleanField(default=False)),
                ('from_prospect', models.BooleanField(default=False)),
                ('response_dt', models.DateTimeField(blank=True, null=True)),
                ('response_time_seconds', models.IntegerField(default=0)),
                ('message_status', models.CharField(blank=True, db_index=True, max_length=120, null=True)),
                ('has_second_send_attempt', models.BooleanField(default=False)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Campaign')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
                ('initial_message_sent_by_rep', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='initial_message_sent_by_rep_name', to=settings.AUTH_USER_MODEL)),
                ('market', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Market')),
                ('prospect', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='sherpa.Prospect')),
                ('response_from_rep', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='response_from_rep_name', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SMSRelayNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_utc', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=16)),
                ('twilio_relay_number', models.CharField(max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='StatsBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('twilio', 'Twilio'), ('telnyx', 'Telnyx')], default='twilio', max_length=16)),
                ('created_utc', models.DateTimeField(auto_now_add=True)),
                ('created_local', models.DateTimeField(blank=True, null=True)),
                ('batch_number', models.IntegerField(default=0)),
                ('sent', models.IntegerField(default=0)),
                ('delivered', models.IntegerField(default=0)),
                ('undelivered', models.IntegerField(default=0)),
                ('received', models.IntegerField(default=0)),
                ('received_dead_auto', models.IntegerField(default=0)),
                ('first_send_utc', models.DateTimeField(blank=True, null=True)),
                ('first_send_local', models.DateTimeField(blank=True, null=True)),
                ('last_send_utc', models.DateTimeField(blank=True, null=True)),
                ('last_send_local', models.DateTimeField(blank=True, null=True)),
                ('send_attempt', models.IntegerField(default=0)),
                ('error_30003', models.IntegerField(default=0)),
                ('error_30003_att', models.IntegerField(default=0)),
                ('error_30005', models.IntegerField(default=0)),
                ('error_30007', models.IntegerField(default=0)),
                ('skipped_has_previous_response', models.IntegerField(default=0)),
                ('skipped_msg_threshold_days', models.IntegerField(default=0)),
                ('skipped_internal_dnc', models.IntegerField(default=0)),
                ('skipped_litigator', models.IntegerField(default=0)),
                ('skipped_opt_out', models.IntegerField(default=0)),
                ('skipped_att', models.IntegerField(default=0)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Campaign')),
                ('market', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Market')),
                ('parent_market', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.AreaCodeState')),
            ],
        ),
        migrations.CreateModel(
            name='SupportLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32)),
                ('description', models.CharField(max_length=128)),
                ('icon', models.CharField(blank=True, max_length=32)),
                ('url', models.URLField(blank=True)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='ZapierWebhook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inctive')], default='active', max_length=16)),
                ('name', models.CharField(max_length=255)),
                ('webhook_url', models.CharField(max_length=255)),
                ('webhook_type', models.CharField(choices=[('prospect', 'Prospect'), ('sms', 'SMS')], default='prospect', max_length=16)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhooks', to='sherpa.Company')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('search_lead_stage_id', models.IntegerField(default=0)),
                ('search_input_text', models.CharField(blank=True, max_length=255, null=True)),
                ('search_is_priority', models.BooleanField(default=False)),
                ('search_qualified_leads', models.BooleanField(default=False)),
                ('dashboard_day_filter', models.IntegerField(default=0)),
                ('access_sms_relay', models.BooleanField(default=True)),
                ('role', models.CharField(choices=[('master_admin', 'Master Admin'), ('admin', 'Admin'), ('staff', 'Staff'), ('junior_staff', 'Junior Staff')], default='staff', max_length=16)),
                ('twilio_phone_filter_company_id', models.IntegerField(default=0)),
                ('twilio_phone_filter_market_id', models.IntegerField(default=0)),
                ('twilio_phone_filter_number_status', models.CharField(default='all', max_length=12)),
                ('disclaimer_signature', models.CharField(blank=True, max_length=255, null=True)),
                ('disclaimer_timestamp', models.DateTimeField(blank=True, null=True)),
                ('disclaimer_signature_backup', models.CharField(blank=True, max_length=255, null=True)),
                ('disclaimer_timestamp_backup', models.DateTimeField(blank=True, null=True)),
                ('timezone', models.CharField(choices=[('Africa/Abidjan', 'Africa/Abidjan'), ('Africa/Accra', 'Africa/Accra'), ('Africa/Addis_Ababa', 'Africa/Addis_Ababa'), ('Africa/Algiers', 'Africa/Algiers'), ('Africa/Asmara', 'Africa/Asmara'), ('Africa/Bamako', 'Africa/Bamako'), ('Africa/Bangui', 'Africa/Bangui'), ('Africa/Banjul', 'Africa/Banjul'), ('Africa/Bissau', 'Africa/Bissau'), ('Africa/Blantyre', 'Africa/Blantyre'), ('Africa/Brazzaville', 'Africa/Brazzaville'), ('Africa/Bujumbura', 'Africa/Bujumbura'), ('Africa/Cairo', 'Africa/Cairo'), ('Africa/Casablanca', 'Africa/Casablanca'), ('Africa/Ceuta', 'Africa/Ceuta'), ('Africa/Conakry', 'Africa/Conakry'), ('Africa/Dakar', 'Africa/Dakar'), ('Africa/Dar_es_Salaam', 'Africa/Dar_es_Salaam'), ('Africa/Djibouti', 'Africa/Djibouti'), ('Africa/Douala', 'Africa/Douala'), ('Africa/El_Aaiun', 'Africa/El_Aaiun'), ('Africa/Freetown', 'Africa/Freetown'), ('Africa/Gaborone', 'Africa/Gaborone'), ('Africa/Harare', 'Africa/Harare'), ('Africa/Johannesburg', 'Africa/Johannesburg'), ('Africa/Juba', 'Africa/Juba'), ('Africa/Kampala', 'Africa/Kampala'), ('Africa/Khartoum', 'Africa/Khartoum'), ('Africa/Kigali', 'Africa/Kigali'), ('Africa/Kinshasa', 'Africa/Kinshasa'), ('Africa/Lagos', 'Africa/Lagos'), ('Africa/Libreville', 'Africa/Libreville'), ('Africa/Lome', 'Africa/Lome'), ('Africa/Luanda', 'Africa/Luanda'), ('Africa/Lubumbashi', 'Africa/Lubumbashi'), ('Africa/Lusaka', 'Africa/Lusaka'), ('Africa/Malabo', 'Africa/Malabo'), ('Africa/Maputo', 'Africa/Maputo'), ('Africa/Maseru', 'Africa/Maseru'), ('Africa/Mbabane', 'Africa/Mbabane'), ('Africa/Mogadishu', 'Africa/Mogadishu'), ('Africa/Monrovia', 'Africa/Monrovia'), ('Africa/Nairobi', 'Africa/Nairobi'), ('Africa/Ndjamena', 'Africa/Ndjamena'), ('Africa/Niamey', 'Africa/Niamey'), ('Africa/Nouakchott', 'Africa/Nouakchott'), ('Africa/Ouagadougou', 'Africa/Ouagadougou'), ('Africa/Porto-Novo', 'Africa/Porto-Novo'), ('Africa/Sao_Tome', 'Africa/Sao_Tome'), ('Africa/Tripoli', 'Africa/Tripoli'), ('Africa/Tunis', 'Africa/Tunis'), ('Africa/Windhoek', 'Africa/Windhoek'), ('America/Adak', 'America/Adak'), ('America/Anchorage', 'America/Anchorage'), ('America/Anguilla', 'America/Anguilla'), ('America/Antigua', 'America/Antigua'), ('America/Araguaina', 'America/Araguaina'), ('America/Argentina/Buenos_Aires', 'America/Argentina/Buenos_Aires'), ('America/Argentina/Catamarca', 'America/Argentina/Catamarca'), ('America/Argentina/Cordoba', 'America/Argentina/Cordoba'), ('America/Argentina/Jujuy', 'America/Argentina/Jujuy'), ('America/Argentina/La_Rioja', 'America/Argentina/La_Rioja'), ('America/Argentina/Mendoza', 'America/Argentina/Mendoza'), ('America/Argentina/Rio_Gallegos', 'America/Argentina/Rio_Gallegos'), ('America/Argentina/Salta', 'America/Argentina/Salta'), ('America/Argentina/San_Juan', 'America/Argentina/San_Juan'), ('America/Argentina/San_Luis', 'America/Argentina/San_Luis'), ('America/Argentina/Tucuman', 'America/Argentina/Tucuman'), ('America/Argentina/Ushuaia', 'America/Argentina/Ushuaia'), ('America/Aruba', 'America/Aruba'), ('America/Asuncion', 'America/Asuncion'), ('America/Atikokan', 'America/Atikokan'), ('America/Bahia', 'America/Bahia'), ('America/Bahia_Banderas', 'America/Bahia_Banderas'), ('America/Barbados', 'America/Barbados'), ('America/Belem', 'America/Belem'), ('America/Belize', 'America/Belize'), ('America/Blanc-Sablon', 'America/Blanc-Sablon'), ('America/Boa_Vista', 'America/Boa_Vista'), ('America/Bogota', 'America/Bogota'), ('America/Boise', 'America/Boise'), ('America/Cambridge_Bay', 'America/Cambridge_Bay'), ('America/Campo_Grande', 'America/Campo_Grande'), ('America/Cancun', 'America/Cancun'), ('America/Caracas', 'America/Caracas'), ('America/Cayenne', 'America/Cayenne'), ('America/Cayman', 'America/Cayman'), ('America/Chicago', 'America/Chicago'), ('America/Chihuahua', 'America/Chihuahua'), ('America/Costa_Rica', 'America/Costa_Rica'), ('America/Creston', 'America/Creston'), ('America/Cuiaba', 'America/Cuiaba'), ('America/Curacao', 'America/Curacao'), ('America/Danmarkshavn', 'America/Danmarkshavn'), ('America/Dawson', 'America/Dawson'), ('America/Dawson_Creek', 'America/Dawson_Creek'), ('America/Denver', 'America/Denver'), ('America/Detroit', 'America/Detroit'), ('America/Dominica', 'America/Dominica'), ('America/Edmonton', 'America/Edmonton'), ('America/Eirunepe', 'America/Eirunepe'), ('America/El_Salvador', 'America/El_Salvador'), ('America/Fort_Nelson', 'America/Fort_Nelson'), ('America/Fortaleza', 'America/Fortaleza'), ('America/Glace_Bay', 'America/Glace_Bay'), ('America/Godthab', 'America/Godthab'), ('America/Goose_Bay', 'America/Goose_Bay'), ('America/Grand_Turk', 'America/Grand_Turk'), ('America/Grenada', 'America/Grenada'), ('America/Guadeloupe', 'America/Guadeloupe'), ('America/Guatemala', 'America/Guatemala'), ('America/Guayaquil', 'America/Guayaquil'), ('America/Guyana', 'America/Guyana'), ('America/Halifax', 'America/Halifax'), ('America/Havana', 'America/Havana'), ('America/Hermosillo', 'America/Hermosillo'), ('America/Indiana/Indianapolis', 'America/Indiana/Indianapolis'), ('America/Indiana/Knox', 'America/Indiana/Knox'), ('America/Indiana/Marengo', 'America/Indiana/Marengo'), ('America/Indiana/Petersburg', 'America/Indiana/Petersburg'), ('America/Indiana/Tell_City', 'America/Indiana/Tell_City'), ('America/Indiana/Vevay', 'America/Indiana/Vevay'), ('America/Indiana/Vincennes', 'America/Indiana/Vincennes'), ('America/Indiana/Winamac', 'America/Indiana/Winamac'), ('America/Inuvik', 'America/Inuvik'), ('America/Iqaluit', 'America/Iqaluit'), ('America/Jamaica', 'America/Jamaica'), ('America/Juneau', 'America/Juneau'), ('America/Kentucky/Louisville', 'America/Kentucky/Louisville'), ('America/Kentucky/Monticello', 'America/Kentucky/Monticello'), ('America/Kralendijk', 'America/Kralendijk'), ('America/La_Paz', 'America/La_Paz'), ('America/Lima', 'America/Lima'), ('America/Los_Angeles', 'America/Los_Angeles'), ('America/Lower_Princes', 'America/Lower_Princes'), ('America/Maceio', 'America/Maceio'), ('America/Managua', 'America/Managua'), ('America/Manaus', 'America/Manaus'), ('America/Marigot', 'America/Marigot'), ('America/Martinique', 'America/Martinique'), ('America/Matamoros', 'America/Matamoros'), ('America/Mazatlan', 'America/Mazatlan'), ('America/Menominee', 'America/Menominee'), ('America/Merida', 'America/Merida'), ('America/Metlakatla', 'America/Metlakatla'), ('America/Mexico_City', 'America/Mexico_City'), ('America/Miquelon', 'America/Miquelon'), ('America/Moncton', 'America/Moncton'), ('America/Monterrey', 'America/Monterrey'), ('America/Montevideo', 'America/Montevideo'), ('America/Montserrat', 'America/Montserrat'), ('America/Nassau', 'America/Nassau'), ('America/New_York', 'America/New_York'), ('America/Nipigon', 'America/Nipigon'), ('America/Nome', 'America/Nome'), ('America/Noronha', 'America/Noronha'), ('America/North_Dakota/Beulah', 'America/North_Dakota/Beulah'), ('America/North_Dakota/Center', 'America/North_Dakota/Center'), ('America/North_Dakota/New_Salem', 'America/North_Dakota/New_Salem'), ('America/Ojinaga', 'America/Ojinaga'), ('America/Panama', 'America/Panama'), ('America/Pangnirtung', 'America/Pangnirtung'), ('America/Paramaribo', 'America/Paramaribo'), ('America/Phoenix', 'America/Phoenix'), ('America/Port-au-Prince', 'America/Port-au-Prince'), ('America/Port_of_Spain', 'America/Port_of_Spain'), ('America/Porto_Velho', 'America/Porto_Velho'), ('America/Puerto_Rico', 'America/Puerto_Rico'), ('America/Punta_Arenas', 'America/Punta_Arenas'), ('America/Rainy_River', 'America/Rainy_River'), ('America/Rankin_Inlet', 'America/Rankin_Inlet'), ('America/Recife', 'America/Recife'), ('America/Regina', 'America/Regina'), ('America/Resolute', 'America/Resolute'), ('America/Rio_Branco', 'America/Rio_Branco'), ('America/Santarem', 'America/Santarem'), ('America/Santiago', 'America/Santiago'), ('America/Santo_Domingo', 'America/Santo_Domingo'), ('America/Sao_Paulo', 'America/Sao_Paulo'), ('America/Scoresbysund', 'America/Scoresbysund'), ('America/Sitka', 'America/Sitka'), ('America/St_Barthelemy', 'America/St_Barthelemy'), ('America/St_Johns', 'America/St_Johns'), ('America/St_Kitts', 'America/St_Kitts'), ('America/St_Lucia', 'America/St_Lucia'), ('America/St_Thomas', 'America/St_Thomas'), ('America/St_Vincent', 'America/St_Vincent'), ('America/Swift_Current', 'America/Swift_Current'), ('America/Tegucigalpa', 'America/Tegucigalpa'), ('America/Thule', 'America/Thule'), ('America/Thunder_Bay', 'America/Thunder_Bay'), ('America/Tijuana', 'America/Tijuana'), ('America/Toronto', 'America/Toronto'), ('America/Tortola', 'America/Tortola'), ('America/Vancouver', 'America/Vancouver'), ('America/Whitehorse', 'America/Whitehorse'), ('America/Winnipeg', 'America/Winnipeg'), ('America/Yakutat', 'America/Yakutat'), ('America/Yellowknife', 'America/Yellowknife'), ('Antarctica/Casey', 'Antarctica/Casey'), ('Antarctica/Davis', 'Antarctica/Davis'), ('Antarctica/DumontDUrville', 'Antarctica/DumontDUrville'), ('Antarctica/Macquarie', 'Antarctica/Macquarie'), ('Antarctica/Mawson', 'Antarctica/Mawson'), ('Antarctica/McMurdo', 'Antarctica/McMurdo'), ('Antarctica/Palmer', 'Antarctica/Palmer'), ('Antarctica/Rothera', 'Antarctica/Rothera'), ('Antarctica/Syowa', 'Antarctica/Syowa'), ('Antarctica/Troll', 'Antarctica/Troll'), ('Antarctica/Vostok', 'Antarctica/Vostok'), ('Arctic/Longyearbyen', 'Arctic/Longyearbyen'), ('Asia/Aden', 'Asia/Aden'), ('Asia/Almaty', 'Asia/Almaty'), ('Asia/Amman', 'Asia/Amman'), ('Asia/Anadyr', 'Asia/Anadyr'), ('Asia/Aqtau', 'Asia/Aqtau'), ('Asia/Aqtobe', 'Asia/Aqtobe'), ('Asia/Ashgabat', 'Asia/Ashgabat'), ('Asia/Atyrau', 'Asia/Atyrau'), ('Asia/Baghdad', 'Asia/Baghdad'), ('Asia/Bahrain', 'Asia/Bahrain'), ('Asia/Baku', 'Asia/Baku'), ('Asia/Bangkok', 'Asia/Bangkok'), ('Asia/Barnaul', 'Asia/Barnaul'), ('Asia/Beirut', 'Asia/Beirut'), ('Asia/Bishkek', 'Asia/Bishkek'), ('Asia/Brunei', 'Asia/Brunei'), ('Asia/Chita', 'Asia/Chita'), ('Asia/Choibalsan', 'Asia/Choibalsan'), ('Asia/Colombo', 'Asia/Colombo'), ('Asia/Damascus', 'Asia/Damascus'), ('Asia/Dhaka', 'Asia/Dhaka'), ('Asia/Dili', 'Asia/Dili'), ('Asia/Dubai', 'Asia/Dubai'), ('Asia/Dushanbe', 'Asia/Dushanbe'), ('Asia/Famagusta', 'Asia/Famagusta'), ('Asia/Gaza', 'Asia/Gaza'), ('Asia/Hebron', 'Asia/Hebron'), ('Asia/Ho_Chi_Minh', 'Asia/Ho_Chi_Minh'), ('Asia/Hong_Kong', 'Asia/Hong_Kong'), ('Asia/Hovd', 'Asia/Hovd'), ('Asia/Irkutsk', 'Asia/Irkutsk'), ('Asia/Jakarta', 'Asia/Jakarta'), ('Asia/Jayapura', 'Asia/Jayapura'), ('Asia/Jerusalem', 'Asia/Jerusalem'), ('Asia/Kabul', 'Asia/Kabul'), ('Asia/Kamchatka', 'Asia/Kamchatka'), ('Asia/Karachi', 'Asia/Karachi'), ('Asia/Kathmandu', 'Asia/Kathmandu'), ('Asia/Khandyga', 'Asia/Khandyga'), ('Asia/Kolkata', 'Asia/Kolkata'), ('Asia/Krasnoyarsk', 'Asia/Krasnoyarsk'), ('Asia/Kuala_Lumpur', 'Asia/Kuala_Lumpur'), ('Asia/Kuching', 'Asia/Kuching'), ('Asia/Kuwait', 'Asia/Kuwait'), ('Asia/Macau', 'Asia/Macau'), ('Asia/Magadan', 'Asia/Magadan'), ('Asia/Makassar', 'Asia/Makassar'), ('Asia/Manila', 'Asia/Manila'), ('Asia/Muscat', 'Asia/Muscat'), ('Asia/Nicosia', 'Asia/Nicosia'), ('Asia/Novokuznetsk', 'Asia/Novokuznetsk'), ('Asia/Novosibirsk', 'Asia/Novosibirsk'), ('Asia/Omsk', 'Asia/Omsk'), ('Asia/Oral', 'Asia/Oral'), ('Asia/Phnom_Penh', 'Asia/Phnom_Penh'), ('Asia/Pontianak', 'Asia/Pontianak'), ('Asia/Pyongyang', 'Asia/Pyongyang'), ('Asia/Qatar', 'Asia/Qatar'), ('Asia/Qostanay', 'Asia/Qostanay'), ('Asia/Qyzylorda', 'Asia/Qyzylorda'), ('Asia/Riyadh', 'Asia/Riyadh'), ('Asia/Sakhalin', 'Asia/Sakhalin'), ('Asia/Samarkand', 'Asia/Samarkand'), ('Asia/Seoul', 'Asia/Seoul'), ('Asia/Shanghai', 'Asia/Shanghai'), ('Asia/Singapore', 'Asia/Singapore'), ('Asia/Srednekolymsk', 'Asia/Srednekolymsk'), ('Asia/Taipei', 'Asia/Taipei'), ('Asia/Tashkent', 'Asia/Tashkent'), ('Asia/Tbilisi', 'Asia/Tbilisi'), ('Asia/Tehran', 'Asia/Tehran'), ('Asia/Thimphu', 'Asia/Thimphu'), ('Asia/Tokyo', 'Asia/Tokyo'), ('Asia/Tomsk', 'Asia/Tomsk'), ('Asia/Ulaanbaatar', 'Asia/Ulaanbaatar'), ('Asia/Urumqi', 'Asia/Urumqi'), ('Asia/Ust-Nera', 'Asia/Ust-Nera'), ('Asia/Vientiane', 'Asia/Vientiane'), ('Asia/Vladivostok', 'Asia/Vladivostok'), ('Asia/Yakutsk', 'Asia/Yakutsk'), ('Asia/Yangon', 'Asia/Yangon'), ('Asia/Yekaterinburg', 'Asia/Yekaterinburg'), ('Asia/Yerevan', 'Asia/Yerevan'), ('Atlantic/Azores', 'Atlantic/Azores'), ('Atlantic/Bermuda', 'Atlantic/Bermuda'), ('Atlantic/Canary', 'Atlantic/Canary'), ('Atlantic/Cape_Verde', 'Atlantic/Cape_Verde'), ('Atlantic/Faroe', 'Atlantic/Faroe'), ('Atlantic/Madeira', 'Atlantic/Madeira'), ('Atlantic/Reykjavik', 'Atlantic/Reykjavik'), ('Atlantic/South_Georgia', 'Atlantic/South_Georgia'), ('Atlantic/St_Helena', 'Atlantic/St_Helena'), ('Atlantic/Stanley', 'Atlantic/Stanley'), ('Australia/Adelaide', 'Australia/Adelaide'), ('Australia/Brisbane', 'Australia/Brisbane'), ('Australia/Broken_Hill', 'Australia/Broken_Hill'), ('Australia/Currie', 'Australia/Currie'), ('Australia/Darwin', 'Australia/Darwin'), ('Australia/Eucla', 'Australia/Eucla'), ('Australia/Hobart', 'Australia/Hobart'), ('Australia/Lindeman', 'Australia/Lindeman'), ('Australia/Lord_Howe', 'Australia/Lord_Howe'), ('Australia/Melbourne', 'Australia/Melbourne'), ('Australia/Perth', 'Australia/Perth'), ('Australia/Sydney', 'Australia/Sydney'), ('Canada/Atlantic', 'Canada/Atlantic'), ('Canada/Central', 'Canada/Central'), ('Canada/Eastern', 'Canada/Eastern'), ('Canada/Mountain', 'Canada/Mountain'), ('Canada/Newfoundland', 'Canada/Newfoundland'), ('Canada/Pacific', 'Canada/Pacific'), ('Europe/Amsterdam', 'Europe/Amsterdam'), ('Europe/Andorra', 'Europe/Andorra'), ('Europe/Astrakhan', 'Europe/Astrakhan'), ('Europe/Athens', 'Europe/Athens'), ('Europe/Belgrade', 'Europe/Belgrade'), ('Europe/Berlin', 'Europe/Berlin'), ('Europe/Bratislava', 'Europe/Bratislava'), ('Europe/Brussels', 'Europe/Brussels'), ('Europe/Bucharest', 'Europe/Bucharest'), ('Europe/Budapest', 'Europe/Budapest'), ('Europe/Busingen', 'Europe/Busingen'), ('Europe/Chisinau', 'Europe/Chisinau'), ('Europe/Copenhagen', 'Europe/Copenhagen'), ('Europe/Dublin', 'Europe/Dublin'), ('Europe/Gibraltar', 'Europe/Gibraltar'), ('Europe/Guernsey', 'Europe/Guernsey'), ('Europe/Helsinki', 'Europe/Helsinki'), ('Europe/Isle_of_Man', 'Europe/Isle_of_Man'), ('Europe/Istanbul', 'Europe/Istanbul'), ('Europe/Jersey', 'Europe/Jersey'), ('Europe/Kaliningrad', 'Europe/Kaliningrad'), ('Europe/Kiev', 'Europe/Kiev'), ('Europe/Kirov', 'Europe/Kirov'), ('Europe/Lisbon', 'Europe/Lisbon'), ('Europe/Ljubljana', 'Europe/Ljubljana'), ('Europe/London', 'Europe/London'), ('Europe/Luxembourg', 'Europe/Luxembourg'), ('Europe/Madrid', 'Europe/Madrid'), ('Europe/Malta', 'Europe/Malta'), ('Europe/Mariehamn', 'Europe/Mariehamn'), ('Europe/Minsk', 'Europe/Minsk'), ('Europe/Monaco', 'Europe/Monaco'), ('Europe/Moscow', 'Europe/Moscow'), ('Europe/Oslo', 'Europe/Oslo'), ('Europe/Paris', 'Europe/Paris'), ('Europe/Podgorica', 'Europe/Podgorica'), ('Europe/Prague', 'Europe/Prague'), ('Europe/Riga', 'Europe/Riga'), ('Europe/Rome', 'Europe/Rome'), ('Europe/Samara', 'Europe/Samara'), ('Europe/San_Marino', 'Europe/San_Marino'), ('Europe/Sarajevo', 'Europe/Sarajevo'), ('Europe/Saratov', 'Europe/Saratov'), ('Europe/Simferopol', 'Europe/Simferopol'), ('Europe/Skopje', 'Europe/Skopje'), ('Europe/Sofia', 'Europe/Sofia'), ('Europe/Stockholm', 'Europe/Stockholm'), ('Europe/Tallinn', 'Europe/Tallinn'), ('Europe/Tirane', 'Europe/Tirane'), ('Europe/Ulyanovsk', 'Europe/Ulyanovsk'), ('Europe/Uzhgorod', 'Europe/Uzhgorod'), ('Europe/Vaduz', 'Europe/Vaduz'), ('Europe/Vatican', 'Europe/Vatican'), ('Europe/Vienna', 'Europe/Vienna'), ('Europe/Vilnius', 'Europe/Vilnius'), ('Europe/Volgograd', 'Europe/Volgograd'), ('Europe/Warsaw', 'Europe/Warsaw'), ('Europe/Zagreb', 'Europe/Zagreb'), ('Europe/Zaporozhye', 'Europe/Zaporozhye'), ('Europe/Zurich', 'Europe/Zurich'), ('GMT', 'GMT'), ('Indian/Antananarivo', 'Indian/Antananarivo'), ('Indian/Chagos', 'Indian/Chagos'), ('Indian/Christmas', 'Indian/Christmas'), ('Indian/Cocos', 'Indian/Cocos'), ('Indian/Comoro', 'Indian/Comoro'), ('Indian/Kerguelen', 'Indian/Kerguelen'), ('Indian/Mahe', 'Indian/Mahe'), ('Indian/Maldives', 'Indian/Maldives'), ('Indian/Mauritius', 'Indian/Mauritius'), ('Indian/Mayotte', 'Indian/Mayotte'), ('Indian/Reunion', 'Indian/Reunion'), ('Pacific/Apia', 'Pacific/Apia'), ('Pacific/Auckland', 'Pacific/Auckland'), ('Pacific/Bougainville', 'Pacific/Bougainville'), ('Pacific/Chatham', 'Pacific/Chatham'), ('Pacific/Chuuk', 'Pacific/Chuuk'), ('Pacific/Easter', 'Pacific/Easter'), ('Pacific/Efate', 'Pacific/Efate'), ('Pacific/Enderbury', 'Pacific/Enderbury'), ('Pacific/Fakaofo', 'Pacific/Fakaofo'), ('Pacific/Fiji', 'Pacific/Fiji'), ('Pacific/Funafuti', 'Pacific/Funafuti'), ('Pacific/Galapagos', 'Pacific/Galapagos'), ('Pacific/Gambier', 'Pacific/Gambier'), ('Pacific/Guadalcanal', 'Pacific/Guadalcanal'), ('Pacific/Guam', 'Pacific/Guam'), ('Pacific/Honolulu', 'Pacific/Honolulu'), ('Pacific/Kiritimati', 'Pacific/Kiritimati'), ('Pacific/Kosrae', 'Pacific/Kosrae'), ('Pacific/Kwajalein', 'Pacific/Kwajalein'), ('Pacific/Majuro', 'Pacific/Majuro'), ('Pacific/Marquesas', 'Pacific/Marquesas'), ('Pacific/Midway', 'Pacific/Midway'), ('Pacific/Nauru', 'Pacific/Nauru'), ('Pacific/Niue', 'Pacific/Niue'), ('Pacific/Norfolk', 'Pacific/Norfolk'), ('Pacific/Noumea', 'Pacific/Noumea'), ('Pacific/Pago_Pago', 'Pacific/Pago_Pago'), ('Pacific/Palau', 'Pacific/Palau'), ('Pacific/Pitcairn', 'Pacific/Pitcairn'), ('Pacific/Pohnpei', 'Pacific/Pohnpei'), ('Pacific/Port_Moresby', 'Pacific/Port_Moresby'), ('Pacific/Rarotonga', 'Pacific/Rarotonga'), ('Pacific/Saipan', 'Pacific/Saipan'), ('Pacific/Tahiti', 'Pacific/Tahiti'), ('Pacific/Tarawa', 'Pacific/Tarawa'), ('Pacific/Tongatapu', 'Pacific/Tongatapu'), ('Pacific/Wake', 'Pacific/Wake'), ('Pacific/Wallis', 'Pacific/Wallis'), ('US/Alaska', 'US/Alaska'), ('US/Arizona', 'US/Arizona'), ('US/Central', 'US/Central'), ('US/Eastern', 'US/Eastern'), ('US/Hawaii', 'US/Hawaii'), ('US/Mountain', 'US/Mountain'), ('US/Pacific', 'US/Pacific'), ('UTC', 'UTC')], default='US/Mountain', max_length=255)),
                ('token', models.CharField(default='', max_length=40)),
                ('campaign_market_filter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Market')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UploadSkipTrace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_row_processed', models.IntegerField(default=0)),
                ('total_rows', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('uploaded_filename', models.CharField(blank=True, max_length=255, null=True)),
                ('path', models.CharField(blank=True, max_length=255, null=True)),
                ('stop_upload', models.BooleanField(default=False)),
                ('single_upload_authorized', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('is_single_upload', models.BooleanField(default=False)),
                ('created_local', models.DateTimeField(blank=True, null=True)),
                ('upload_start', models.DateTimeField(blank=True, null=True)),
                ('upload_end', models.DateTimeField(blank=True, null=True)),
                ('push_to_campaign_start', models.DateTimeField(blank=True, null=True)),
                ('push_to_campaign_end', models.DateTimeField(blank=True, null=True)),
                ('invitation_code', models.CharField(blank=True, max_length=64, null=True)),
                ('email_confirmation_sent', models.BooleanField(default=False)),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('has_header_row', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('auto_stop', 'Auto Stop'), ('complete', 'Complete'), ('error', 'Error'), ('paused', 'Paused'), ('running', 'Running'), ('sent_to_task', 'Sent to Task'), ('setup', 'Setup')], default='setup', max_length=255)),
                ('stop_push_to_campaign', models.BooleanField(default=False)),
                ('push_to_campaign_status', models.CharField(default='open', max_length=255)),
                ('total_rows_push_to_campaign', models.IntegerField(default=0)),
                ('last_row_push_to_campaign', models.IntegerField(default=0)),
                ('push_to_campaign_campaign_name', models.CharField(blank=True, max_length=255, null=True)),
                ('push_to_campaign_campaign_id', models.CharField(default='0', max_length=16)),
                ('push_to_campaign_import_type', models.CharField(blank=True, max_length=16, null=True)),
                ('push_to_campaign_email_confirmation_sent', models.BooleanField(default=False)),
                ('push_to_campaign_mobile_phone_count', models.IntegerField(default=0)),
                ('push_to_campaign_landline_phone_count', models.IntegerField(default=0)),
                ('push_to_campaign_other_phone_count', models.IntegerField(default=0)),
                ('push_to_campaign_dnc_count', models.IntegerField(default=0)),
                ('push_to_campaign_litigator_count', models.IntegerField(default=0)),
                ('last_idi_token_reset', models.DateTimeField(blank=True, null=True)),
                ('idi_token', models.TextField(blank=True, null=True)),
                ('total_internal_hits', models.IntegerField(default=0)),
                ('total_existing_matches', models.IntegerField(default=0)),
                ('total_hits', models.IntegerField(default=0)),
                ('total_billable_hits', models.IntegerField(default=0)),
                ('total_phone', models.IntegerField(default=0)),
                ('total_email', models.IntegerField(default=0)),
                ('total_addresses', models.IntegerField(default=0)),
                ('total_litigators', models.IntegerField(blank=True, default=0, null=True)),
                ('fullname_column_number', models.IntegerField(blank=True, null=True)),
                ('first_name_column_number', models.IntegerField(blank=True, null=True)),
                ('last_name_column_number', models.IntegerField(blank=True, null=True)),
                ('mailing_street_column_number', models.IntegerField(blank=True, null=True)),
                ('mailing_city_column_number', models.IntegerField(blank=True, null=True)),
                ('mailing_state_column_number', models.IntegerField(blank=True, null=True)),
                ('mailing_zipcode_column_number', models.IntegerField(blank=True, null=True)),
                ('property_street_column_number', models.IntegerField(blank=True, null=True)),
                ('property_city_column_number', models.IntegerField(blank=True, null=True)),
                ('property_state_column_number', models.IntegerField(blank=True, null=True)),
                ('property_zipcode_column_number', models.IntegerField(blank=True, null=True)),
                ('custom_1_column_number', models.IntegerField(blank=True, null=True)),
                ('custom_2_column_number', models.IntegerField(blank=True, null=True)),
                ('custom_3_column_number', models.IntegerField(blank=True, null=True)),
                ('custom_4_column_number', models.IntegerField(blank=True, null=True)),
                ('custom_5_column_number', models.IntegerField(blank=True, null=True)),
                ('custom_6_column_number', models.IntegerField(blank=True, null=True)),
                ('suppress_against_database', models.BooleanField(default=True)),
                ('upload_error', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('push_to_campaign_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='push_to_campaign_transactions', to='billing.Transaction')),
                ('skip_trace_price', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.SkipTracePrice')),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='billing.Transaction')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UploadProspects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_row_processed', models.IntegerField(default=0)),
                ('total_rows', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('uploaded_filename', models.CharField(blank=True, max_length=255, null=True)),
                ('path', models.CharField(blank=True, max_length=255, null=True)),
                ('stop_upload', models.BooleanField(default=False)),
                ('created_local', models.DateTimeField(blank=True, null=True)),
                ('upload_start', models.DateTimeField(blank=True, null=True)),
                ('upload_end', models.DateTimeField(blank=True, null=True)),
                ('properties_imported', models.IntegerField(default=0)),
                ('prospects_imported', models.IntegerField(default=0)),
                ('has_header_row', models.BooleanField(default=True)),
                ('total_properties', models.IntegerField(default=0)),
                ('total_prospects', models.IntegerField(default=0)),
                ('total_mobile_numbers', models.IntegerField(default=0)),
                ('total_landline_numbers', models.IntegerField(default=0)),
                ('total_other_numbers', models.IntegerField(default=0)),
                ('total_internal_dnc', models.IntegerField(default=0)),
                ('total_associated_internal_dnc', models.IntegerField(default=0)),
                ('total_litigator_list', models.IntegerField(default=0)),
                ('total_associated_litigator_list', models.IntegerField(default=0)),
                ('has_skip_trace', models.BooleanField(default=False)),
                ('status', models.CharField(default='setup', max_length=16)),
                ('email_confirmation_sent', models.BooleanField(default=False)),
                ('additional_upload_cost_amount', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('upload_error', models.TextField(blank=True, null=True)),
                ('field_a', models.CharField(blank=True, max_length=20, null=True)),
                ('field_b', models.CharField(blank=True, max_length=20, null=True)),
                ('field_c', models.CharField(blank=True, max_length=20, null=True)),
                ('field_d', models.CharField(blank=True, max_length=20, null=True)),
                ('field_e', models.CharField(blank=True, max_length=20, null=True)),
                ('field_f', models.CharField(blank=True, max_length=20, null=True)),
                ('field_g', models.CharField(blank=True, max_length=20, null=True)),
                ('field_h', models.CharField(blank=True, max_length=20, null=True)),
                ('field_i', models.CharField(blank=True, max_length=20, null=True)),
                ('field_j', models.CharField(blank=True, max_length=20, null=True)),
                ('field_k', models.CharField(blank=True, max_length=20, null=True)),
                ('field_l', models.CharField(blank=True, max_length=20, null=True)),
                ('fullname_column_number', models.IntegerField(blank=True, null=True)),
                ('first_name_column_number', models.IntegerField(blank=True, null=True)),
                ('last_name_column_number', models.IntegerField(blank=True, null=True)),
                ('street_column_number', models.IntegerField(blank=True, null=True)),
                ('city_column_number', models.IntegerField(blank=True, null=True)),
                ('state_column_number', models.IntegerField(blank=True, null=True)),
                ('zipcode_column_number', models.IntegerField(blank=True, null=True)),
                ('mailing_street_column_number', models.IntegerField(blank=True, null=True)),
                ('mailing_city_column_number', models.IntegerField(blank=True, null=True)),
                ('mailing_state_column_number', models.IntegerField(blank=True, null=True)),
                ('mailing_zipcode_column_number', models.IntegerField(blank=True, null=True)),
                ('email_column_number', models.IntegerField(blank=True, null=True)),
                ('custom_1_column_number', models.IntegerField(blank=True, null=True)),
                ('phone_1_number', models.IntegerField(blank=True, null=True)),
                ('phone_2_number', models.IntegerField(blank=True, null=True)),
                ('phone_3_number', models.IntegerField(blank=True, null=True)),
                ('phone_4_number', models.IntegerField(blank=True, null=True)),
                ('phone_5_number', models.IntegerField(blank=True, null=True)),
                ('phone_6_number', models.IntegerField(blank=True, null=True)),
                ('phone_7_number', models.IntegerField(blank=True, null=True)),
                ('phone_8_number', models.IntegerField(blank=True, null=True)),
                ('phone_9_number', models.IntegerField(blank=True, null=True)),
                ('phone_10_number', models.IntegerField(blank=True, null=True)),
                ('phone_11_number', models.IntegerField(blank=True, null=True)),
                ('phone_12_number', models.IntegerField(blank=True, null=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Campaign')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='billing.Transaction')),
            ],
            options={
                'verbose_name_plural': 'upload prospects',
            },
        ),
        migrations.CreateModel(
            name='UploadLitigatorList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_row_processed', models.IntegerField(default=0)),
                ('total_rows', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('uploaded_filename', models.CharField(blank=True, max_length=255, null=True)),
                ('path', models.CharField(blank=True, max_length=255, null=True)),
                ('stop_upload', models.BooleanField(default=False)),
                ('last_numbers_saved', models.IntegerField(default=0)),
                ('status', models.CharField(default='setup', max_length=16)),
                ('litigator_list_type', models.CharField(blank=True, max_length=16, null=True)),
                ('confirmation_email_sent', models.BooleanField(default=False)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UploadLitigatorCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_row_processed', models.IntegerField(default=0)),
                ('total_rows', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('uploaded_filename', models.CharField(blank=True, max_length=255, null=True)),
                ('path', models.CharField(blank=True, max_length=255, null=True)),
                ('stop_upload', models.BooleanField(default=False)),
                ('created_local', models.DateTimeField(blank=True, null=True)),
                ('email_address', models.CharField(blank=True, max_length=255, null=True)),
                ('email_started_confirmation_sent', models.BooleanField(default=False)),
                ('email_completed_sent', models.BooleanField(default=False)),
                ('invitation_code', models.CharField(blank=True, max_length=64, null=True)),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('has_header_row', models.BooleanField(default=True)),
                ('validate_address_last_row_processed', models.IntegerField(default=0)),
                ('status', models.CharField(default='setup', max_length=255)),
                ('fullname_column_number', models.IntegerField(blank=True, null=True)),
                ('first_name_column_number', models.IntegerField(blank=True, null=True)),
                ('last_name_column_number', models.IntegerField(blank=True, null=True)),
                ('street_column_number', models.IntegerField(blank=True, null=True)),
                ('city_column_number', models.IntegerField(blank=True, null=True)),
                ('state_column_number', models.IntegerField(blank=True, null=True)),
                ('zipcode_column_number', models.IntegerField(blank=True, null=True)),
                ('mailing_street_column_number', models.IntegerField(blank=True, null=True)),
                ('mailing_city_column_number', models.IntegerField(blank=True, null=True)),
                ('mailing_state_column_number', models.IntegerField(blank=True, null=True)),
                ('mailing_zipcode_column_number', models.IntegerField(blank=True, null=True)),
                ('email_column_number', models.IntegerField(blank=True, null=True)),
                ('custom_1_column_number', models.IntegerField(blank=True, null=True)),
                ('custom_2_column_number', models.IntegerField(blank=True, null=True)),
                ('custom_3_column_number', models.IntegerField(blank=True, null=True)),
                ('phone_1_number', models.IntegerField(blank=True, null=True)),
                ('phone_2_number', models.IntegerField(blank=True, null=True)),
                ('phone_3_number', models.IntegerField(blank=True, null=True)),
                ('phone_4_number', models.IntegerField(blank=True, null=True)),
                ('phone_5_number', models.IntegerField(blank=True, null=True)),
                ('phone_6_number', models.IntegerField(blank=True, null=True)),
                ('phone_7_number', models.IntegerField(blank=True, null=True)),
                ('phone_8_number', models.IntegerField(blank=True, null=True)),
                ('phone_9_number', models.IntegerField(blank=True, null=True)),
                ('phone_10_number', models.IntegerField(blank=True, null=True)),
                ('phone_11_number', models.IntegerField(blank=True, null=True)),
                ('phone_12_number', models.IntegerField(blank=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UploadInternalDNC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_row_processed', models.IntegerField(default=0)),
                ('total_rows', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('uploaded_filename', models.CharField(blank=True, max_length=255, null=True)),
                ('path', models.CharField(blank=True, max_length=255, null=True)),
                ('stop_upload', models.BooleanField(default=False)),
                ('total_phone_numbers_saved', models.IntegerField(default=0)),
                ('status', models.CharField(default='setup', max_length=16)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UpdateMonthlyUploadLimit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_monthly_upload_limit', models.IntegerField(default=0)),
                ('update_date', models.DateField()),
                ('status', models.CharField(choices=[('open', 'Open'), ('complete', 'Complete'), ('error', 'Error')], default='open', max_length=8)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
            ],
        ),
        migrations.CreateModel(
            name='TwilioResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('is_bulk_message', models.BooleanField(default=False)),
                ('prospect_phone_raw', models.CharField(blank=True, max_length=16, null=True)),
                ('message_sid', models.CharField(blank=True, db_index=True, max_length=120, null=True)),
                ('message_status', models.CharField(blank=True, max_length=120, null=True)),
                ('error_code', models.CharField(blank=True, max_length=120, null=True)),
                ('carrier', models.CharField(blank=True, max_length=120, null=True)),
                ('is_delivered', models.BooleanField(default=False)),
                ('is_undelivered', models.BooleanField(default=False)),
                ('is_error_30003', models.BooleanField(default=False)),
                ('is_error_30003_att', models.BooleanField(default=False)),
                ('is_error_30005', models.BooleanField(default=False)),
                ('is_error_30007', models.BooleanField(default=False)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Campaign')),
                ('campaign_prospect', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.CampaignProspect')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
                ('prospect', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Prospect')),
                ('sms', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.SMSMessage')),
                ('stats_batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.StatsBatch')),
                ('twilio_phone_number', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.PhoneNumber')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionCancellationRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_datetime', models.DateTimeField(auto_now_add=True)),
                ('cancellation_reason_text', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted_pending', 'Accepted Pending'), ('accepted_complete', 'Complete')], default='pending', max_length=17)),
                ('cancellation_date', models.DateField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cancellation_requests', to='sherpa.Company')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SMSTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('message', models.TextField(blank=True, max_length=300, null=True)),
                ('alternate_message', models.TextField(blank=True, max_length=300, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='SMSResponseNoProspectFound',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('created_local', models.DateTimeField(blank=True, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=255, null=True)),
                ('our_number', models.CharField(blank=True, max_length=255, null=True)),
                ('from_number', models.CharField(blank=True, max_length=255, null=True)),
                ('to_number', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.TextField(blank=True, max_length=300, null=True)),
                ('num_media', models.CharField(blank=True, max_length=255, null=True)),
                ('media_url', models.CharField(blank=True, max_length=255, null=True)),
                ('file_extension', models.CharField(blank=True, max_length=255, null=True)),
                ('message_forwarded', models.DateTimeField(blank=True, null=True)),
                ('is_message_forwarded', models.BooleanField(default=False)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
            ],
        ),
        migrations.CreateModel(
            name='SMSRelayNumberAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_utc', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=16)),
                ('last_deactivated', models.DateTimeField(blank=True, null=True)),
                ('rep', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('twilio_relay_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sherpa.SMSRelayNumber')),
            ],
        ),
        migrations.CreateModel(
            name='SMSRelayMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_utc', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=16)),
                ('last_activity_utc', models.DateTimeField(blank=True, null=True)),
                ('twilio_relay_number', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('twilio_market_number', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('prospect_number', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('rep_number', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('prospect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relay_maps', to='sherpa.Prospect')),
                ('rep', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('sms_relay_number_assignment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.SMSRelayNumberAssignment')),
                ('sms_relay_number_object', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.SMSRelayNumber')),
            ],
        ),
        migrations.CreateModel(
            name='SMSPrefillText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(blank=True, max_length=160)),
                ('message', models.CharField(blank=True, max_length=500)),
                ('sort_order', models.IntegerField(default=0)),
                ('message_formatted', models.CharField(blank=True, max_length=500)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quick_replies', to='sherpa.Company')),
            ],
            options={
                'ordering': ('sort_order',),
            },
        ),
        migrations.AddField(
            model_name='smsmessage',
            name='stats_batch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to='sherpa.StatsBatch'),
        ),
        migrations.AddField(
            model_name='smsmessage',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='SkipTraceProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('skip_trace_status', models.CharField(blank=True, max_length=255, null=True)),
                ('is_existing_match', models.BooleanField(default=False)),
                ('synced_push_to_campaign', models.BooleanField(default=False)),
                ('has_hit', models.BooleanField(default=False)),
                ('existing_match_prospect_id', models.CharField(blank=True, max_length=16, null=True)),
                ('matching_prospect_id_1', models.IntegerField(default=0)),
                ('matching_prospect_id_2', models.IntegerField(default=0)),
                ('matching_prospect_id_3', models.IntegerField(default=0)),
                ('submitted_owner_fullname', models.CharField(blank=True, max_length=255, null=True)),
                ('submitted_owner_first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('submitted_owner_last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('submitted_property_address', models.CharField(blank=True, max_length=255, null=True)),
                ('submitted_property_city', models.CharField(blank=True, max_length=255, null=True)),
                ('submitted_property_state', models.CharField(blank=True, max_length=255, null=True)),
                ('submitted_property_zip', models.CharField(blank=True, max_length=255, null=True)),
                ('submitted_mailing_address', models.CharField(blank=True, max_length=255, null=True)),
                ('submitted_mailing_city', models.CharField(blank=True, max_length=255, null=True)),
                ('submitted_mailing_state', models.CharField(blank=True, max_length=255, null=True)),
                ('submitted_mailing_zip', models.CharField(blank=True, max_length=255, null=True)),
                ('submitted_custom_1', models.CharField(blank=True, max_length=512, null=True)),
                ('submitted_custom_2', models.CharField(blank=True, max_length=512, null=True)),
                ('submitted_custom_3', models.CharField(blank=True, max_length=512, null=True)),
                ('submitted_custom_4', models.CharField(blank=True, max_length=512, null=True)),
                ('submitted_custom_5', models.CharField(blank=True, max_length=512, null=True)),
                ('submitted_custom_6', models.CharField(blank=True, max_length=512, null=True)),
                ('returned_fullname', models.CharField(blank=True, max_length=255, null=True)),
                ('returned_first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('returned_last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('returned_phone_1', models.CharField(blank=True, max_length=16, null=True)),
                ('returned_phone_2', models.CharField(blank=True, max_length=16, null=True)),
                ('returned_phone_3', models.CharField(blank=True, max_length=16, null=True)),
                ('returned_phone_4', models.CharField(blank=True, max_length=16, null=True)),
                ('returned_phone_5', models.CharField(blank=True, max_length=16, null=True)),
                ('returned_phone_type_1', models.CharField(blank=True, max_length=64, null=True)),
                ('returned_phone_type_2', models.CharField(blank=True, max_length=64, null=True)),
                ('returned_phone_type_3', models.CharField(blank=True, max_length=64, null=True)),
                ('returned_phone_type_4', models.CharField(blank=True, max_length=64, null=True)),
                ('returned_phone_type_5', models.CharField(blank=True, max_length=64, null=True)),
                ('returned_phone_is_disconnected_1', models.CharField(blank=True, max_length=16, null=True)),
                ('returned_phone_is_disconnected_2', models.CharField(blank=True, max_length=16, null=True)),
                ('returned_phone_is_disconnected_3', models.CharField(blank=True, max_length=16, null=True)),
                ('returned_phone_is_disconnected_4', models.CharField(blank=True, max_length=16, null=True)),
                ('returned_phone_is_disconnected_5', models.CharField(blank=True, max_length=16, null=True)),
                ('returned_phone_carrier_1', models.CharField(blank=True, max_length=128, null=True)),
                ('returned_phone_carrier_2', models.CharField(blank=True, max_length=128, null=True)),
                ('returned_phone_carrier_3', models.CharField(blank=True, max_length=128, null=True)),
                ('returned_phone_carrier_4', models.CharField(blank=True, max_length=128, null=True)),
                ('returned_phone_carrier_5', models.CharField(blank=True, max_length=128, null=True)),
                ('returned_phone_last_seen_1', models.DateField(blank=True, null=True)),
                ('returned_phone_last_seen_2', models.DateField(blank=True, null=True)),
                ('returned_phone_last_seen_3', models.DateField(blank=True, null=True)),
                ('returned_phone_last_seen_4', models.DateField(blank=True, null=True)),
                ('returned_phone_last_seen_5', models.DateField(blank=True, null=True)),
                ('returned_email_1', models.CharField(blank=True, max_length=125, null=True)),
                ('returned_email_2', models.CharField(blank=True, max_length=125, null=True)),
                ('returned_email_3', models.CharField(blank=True, max_length=125, null=True)),
                ('returned_email_last_seen_1', models.DateField(blank=True, null=True)),
                ('returned_email_last_seen_2', models.DateField(blank=True, null=True)),
                ('returned_email_last_seen_3', models.DateField(blank=True, null=True)),
                ('returned_address_1', models.CharField(blank=True, max_length=255, null=True)),
                ('returned_city_1', models.CharField(blank=True, max_length=255, null=True)),
                ('returned_state_1', models.CharField(blank=True, max_length=255, null=True)),
                ('returned_zip_1', models.CharField(blank=True, max_length=255, null=True)),
                ('returned_address_last_seen_1', models.DateField(blank=True, null=True)),
                ('returned_address_2', models.CharField(blank=True, max_length=255, null=True)),
                ('returned_city_2', models.CharField(blank=True, max_length=255, null=True)),
                ('returned_state_2', models.CharField(blank=True, max_length=255, null=True)),
                ('returned_zip_2', models.CharField(blank=True, max_length=255, null=True)),
                ('returned_address_last_seen_2', models.DateField(blank=True, null=True)),
                ('returned_ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('returned_ip_last_seen', models.DateField(blank=True, null=True)),
                ('returned_foreclosure_date', models.DateField(blank=True, null=True)),
                ('returned_lien_date', models.DateField(blank=True, null=True)),
                ('returned_judgment_date', models.DateField(blank=True, null=True)),
                ('validated_returned_address_1', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_returned_address_2', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_returned_city_1', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_returned_state_1', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_returned_zip_1', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_returned_property_status', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_status', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('validated_property_delivery_line_1', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('validated_property_delivery_line_2', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('validated_property_last_line', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_primary_number', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_street_name', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_street_predirection', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_street_postdirection', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_street_suffix', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_secondary_number', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_secondary_designator', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_extra_secondary_number', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_extra_secondary_designator', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_pmb_designator', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_pmb_number', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_city_name', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_default_city_name', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_state_abbreviation', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_zipcode', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_plus4_code', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_latitude', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_longitude', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_precision', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_time_zone', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_utc_offset', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_vacant', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_mailing_status', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('validated_mailing_delivery_line_1', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('validated_mailing_delivery_line_2', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('validated_mailing_last_line', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_primary_number', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_mailing_street_name', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_street_predirection', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_mailing_street_postdirection', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_mailing_street_suffix', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_mailing_secondary_number', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_mailing_secondary_designator', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_extra_secondary_number', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_extra_secondary_designator', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_pmb_designator', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_pmb_number', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_city_name', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_default_city_name', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_state_abbreviation', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_zipcode', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_mailing_plus4_code', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_mailing_latitude', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_longitude', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_precision', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_time_zone', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_utc_offset', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_mailing_vacant', models.CharField(blank=True, max_length=16, null=True)),
                ('age', models.CharField(blank=True, max_length=255, null=True)),
                ('date_of_birth', models.CharField(blank=True, max_length=255, null=True)),
                ('deceased', models.CharField(blank=True, max_length=255, null=True)),
                ('bankruptcy', models.CharField(blank=True, max_length=255, null=True)),
                ('relative_1_first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('relative_1_last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('relative_1_phone1', models.CharField(blank=True, max_length=255, null=True)),
                ('relative_1_phone2', models.CharField(blank=True, max_length=255, null=True)),
                ('relative_1_phone3', models.CharField(blank=True, max_length=255, null=True)),
                ('relative_2_first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('relative_2_last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('relative_2_phone1', models.CharField(blank=True, max_length=255, null=True)),
                ('relative_2_phone2', models.CharField(blank=True, max_length=255, null=True)),
                ('relative_2_phone3', models.CharField(blank=True, max_length=255, null=True)),
                ('upload_error', models.TextField(blank=True, null=True)),
                ('testing_address_type', models.CharField(blank=True, max_length=1, null=True)),
                ('testing_first_name', models.CharField(blank=True, max_length=1, null=True)),
                ('testing_last_name', models.CharField(blank=True, max_length=1, null=True)),
                ('testing_address', models.CharField(blank=True, max_length=1, null=True)),
                ('testing_city', models.CharField(blank=True, max_length=1, null=True)),
                ('testing_state', models.CharField(blank=True, max_length=1, null=True)),
                ('testing_zip', models.CharField(blank=True, max_length=1, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
                ('upload_skip_trace', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.UploadSkipTrace')),
            ],
            options={
                'verbose_name_plural': 'skip trace properties',
            },
        ),
        migrations.CreateModel(
            name='RoiStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('company_pays_own_twilio', models.BooleanField(default=False)),
                ('revenue_subscription', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('revenue_subscription_count', models.IntegerField(default=0)),
                ('revenue_skip_trace', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('revenue_skip_trace_count', models.IntegerField(default=0)),
                ('revenue_additional_uploads', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('revenue_additional_uploads_count', models.IntegerField(default=0)),
                ('revenue_other', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('revenue_other_count', models.IntegerField(default=0)),
                ('count_sms_sent', models.IntegerField(default=0)),
                ('count_sms_received', models.IntegerField(default=0)),
                ('count_phone_numbers', models.IntegerField(default=0)),
                ('count_prospects', models.IntegerField(default=0)),
                ('count_unique_prospects', models.IntegerField(default=0)),
                ('count_phone_type_lookup', models.IntegerField(default=0)),
                ('count_skip_trace_hits', models.IntegerField(default=0)),
                ('count_skip_trace_uploads', models.IntegerField(default=0)),
                ('subscription_signup_date', models.DateTimeField(blank=True, null=True)),
                ('next_billing_date', models.DateField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
            ],
        ),
        migrations.CreateModel(
            name='ReceiptSmsDirect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_raw', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('sent_date', models.DateTimeField(auto_now_add=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Campaign')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
            ],
        ),
        migrations.AddField(
            model_name='prospect',
            name='agent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sherpa.UserProfile'),
        ),
        migrations.AddField(
            model_name='prospect',
            name='campaigns',
            field=models.ManyToManyField(blank=True, to='sherpa.Campaign'),
        ),
        migrations.AddField(
            model_name='prospect',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company'),
        ),
        migrations.AddField(
            model_name='prospect',
            name='lead_stage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sherpa.LeadStage'),
        ),
        migrations.AddField(
            model_name='prospect',
            name='markets',
            field=models.ManyToManyField(blank=True, to='sherpa.Market'),
        ),
        migrations.AddField(
            model_name='prospect',
            name='qualified_lead_created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='prospect',
            name='sherpa_phone_number_obj',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sherpa.PhoneNumber'),
        ),
        migrations.AddField(
            model_name='prospect',
            name='sms_relay_map',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sms_relay_map_name', to='sherpa.SMSRelayMap'),
        ),
        migrations.AddField(
            model_name='prospect',
            name='tags',
            field=models.ManyToManyField(blank=True, to='prospects.ProspectTag'),
        ),
        migrations.CreateModel(
            name='PhoneType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checked_datetime', models.DateTimeField(auto_now_add=True)),
                ('phone', models.CharField(max_length=16, unique=True)),
                ('type', models.CharField(blank=True, choices=[('mobile', 'Mobile'), ('voip', 'VOIP'), ('landline', 'Landline'), ('na', 'Not Applicable')], max_length=16, null=True)),
                ('carrier', models.CharField(blank=True, max_length=255, null=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Campaign')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('prospect', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Prospect')),
            ],
            options={
                'ordering': ('-created_date',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LitigatorCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('fullname', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone1', models.CharField(blank=True, max_length=255, null=True)),
                ('phone2', models.CharField(blank=True, max_length=255, null=True)),
                ('phone3', models.CharField(blank=True, max_length=255, null=True)),
                ('mailing_address', models.TextField(blank=True, null=True)),
                ('mailing_city', models.CharField(blank=True, max_length=255, null=True)),
                ('mailing_state', models.CharField(blank=True, max_length=255, null=True)),
                ('mailing_zip', models.CharField(blank=True, max_length=255, null=True)),
                ('property_address', models.TextField(blank=True, null=True)),
                ('property_city', models.CharField(blank=True, max_length=255, null=True)),
                ('property_state', models.CharField(blank=True, max_length=255, null=True)),
                ('property_zip', models.CharField(blank=True, max_length=255, null=True)),
                ('related_record_id', models.CharField(blank=True, max_length=255, null=True)),
                ('is_first_record', models.BooleanField(default=False)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('custom1', models.CharField(blank=True, max_length=255, null=True)),
                ('custom2', models.CharField(blank=True, max_length=255, null=True)),
                ('custom3', models.CharField(blank=True, max_length=255, null=True)),
                ('litigator_type', models.CharField(blank=True, choices=[('Litigator', 'Litigator'), ('Associated', 'Associated'), ('Complainer', 'Complainer'), ('Serial Litigator', 'Serial Litigator'), ('Pre-Litigator', 'Pre-Litigator')], max_length=64, null=True)),
                ('sort_order', models.IntegerField(default=9)),
                ('validated_property_status', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_delivery_line_1', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_delivery_line_2', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_last_line', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_primary_number', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_street_name', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_street_predirection', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_street_postdirection', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_street_suffix', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_secondary_number', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_secondary_designator', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_extra_secondary_number', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_extra_secondary_designator', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_pmb_designator', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_pmb_number', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_city_name', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_default_city_name', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_state_abbreviation', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_zipcode', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_plus4_code', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_latitude', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_longitude', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_precision', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_time_zone', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_property_utc_offset', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_property_vacant', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_mailing_status', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('validated_mailing_delivery_line_1', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('validated_mailing_delivery_line_2', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('validated_mailing_last_line', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_primary_number', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_mailing_street_name', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_street_predirection', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_mailing_street_postdirection', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_mailing_street_suffix', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_mailing_secondary_number', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_mailing_secondary_designator', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_extra_secondary_number', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_extra_secondary_designator', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_pmb_designator', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_pmb_number', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_city_name', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_default_city_name', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_state_abbreviation', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_zipcode', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_mailing_plus4_code', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_mailing_latitude', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_longitude', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_precision', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_time_zone', models.CharField(blank=True, max_length=255, null=True)),
                ('validated_mailing_utc_offset', models.CharField(blank=True, max_length=16, null=True)),
                ('validated_mailing_vacant', models.CharField(blank=True, max_length=16, null=True)),
                ('upload_litigator_check', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.UploadLitigatorCheck')),
            ],
        ),
        migrations.CreateModel(
            name='LastUploadFieldMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateTimeField(auto_now_add=True)),
                ('has_header_row', models.BooleanField(default=True)),
                ('field_a', models.CharField(blank=True, max_length=20, null=True)),
                ('field_b', models.CharField(blank=True, max_length=20, null=True)),
                ('field_c', models.CharField(blank=True, max_length=20, null=True)),
                ('field_d', models.CharField(blank=True, max_length=20, null=True)),
                ('field_e', models.CharField(blank=True, max_length=20, null=True)),
                ('field_f', models.CharField(blank=True, max_length=20, null=True)),
                ('field_g', models.CharField(blank=True, max_length=20, null=True)),
                ('field_h', models.CharField(blank=True, max_length=20, null=True)),
                ('field_i', models.CharField(blank=True, max_length=20, null=True)),
                ('field_j', models.CharField(blank=True, max_length=20, null=True)),
                ('field_k', models.CharField(blank=True, max_length=20, null=True)),
                ('field_l', models.CharField(blank=True, max_length=20, null=True)),
                ('upload_properties_field_a', models.CharField(blank=True, max_length=20, null=True)),
                ('upload_properties_field_b', models.CharField(blank=True, max_length=20, null=True)),
                ('upload_properties_field_c', models.CharField(blank=True, max_length=20, null=True)),
                ('upload_properties_field_d', models.CharField(blank=True, max_length=20, null=True)),
                ('preselect_column_number_list', models.TextField(blank=True, null=True)),
                ('preselect_column_number_list_skip_trace', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InternalDNC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_datetime', models.DateTimeField(auto_now_add=True)),
                ('phone_raw', models.CharField(blank=True, db_index=True, max_length=16, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company')),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='invitation_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.InvitationCode'),
        ),
        migrations.AddField(
            model_name='campaignprospect',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company'),
        ),
        migrations.AddField(
            model_name='campaignprospect',
            name='from_upload_skip_trace',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.UploadSkipTrace'),
        ),
        migrations.AddField(
            model_name='campaignprospect',
            name='prospect',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sherpa.Prospect'),
        ),
        migrations.AddField(
            model_name='campaignprospect',
            name='sms_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.SMSTemplate'),
        ),
        migrations.AddField(
            model_name='campaignprospect',
            name='stats_batch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.StatsBatch'),
        ),
        migrations.AddField(
            model_name='campaignprospect',
            name='upload_prospects',
            field=models.ManyToManyField(blank=True, to='sherpa.UploadProspects'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sherpa.Company'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='campaign',
            name='folder',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='campaigns.CampaignFolder'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='issues',
            field=models.ManyToManyField(blank=True, to='campaigns.CampaignIssue'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='lead_stage_filter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sherpa.LeadStage'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='market',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sherpa.Market'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sherpa.UserProfile'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='sms_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sms_template_name', to='sherpa.SMSTemplate'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='tags',
            field=models.ManyToManyField(blank=True, to='campaigns.CampaignTag'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='zapier_webhook',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sherpa.ZapierWebhook'),
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_utc', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(choices=[('Added to DNC', 'Added to DNC'), ('Removed from DNC', 'Removed from DNC'), ('Owner Not Valid', 'Owner Not Valid'), ('Owner Verified', 'Owner Verified'), ('Owner Unverified', 'Owner Unverified'), ('Added as Priority', 'Added as Priority'), ('Removed as Priority', 'Removed as Priority'), ('Qualified Lead Added', 'Qualified Lead Added'), ('Qualified Lead Removed', 'Qualified Lead Removed'), ('Added Autodead', 'Added Autodead'), ('Removed Autodead', 'Removed Autodead'), ('Created Note', 'Created Note')], max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('icon', models.CharField(max_length=255)),
                ('date_local', models.DateTimeField(blank=True, null=True)),
                ('campaign_prospect', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.CampaignProspect')),
                ('prospect', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sherpa.Prospect')),
            ],
            options={
                'verbose_name_plural': 'activities',
            },
        ),
        migrations.AlterUniqueTogether(
            name='campaignprospect',
            unique_together={('campaign', 'prospect')},
        ),
        migrations.CreateModel(
            name='CampaignAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sherpa.Campaign')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sherpa.UserProfile')),
            ],
            options={
                'verbose_name_plural': 'campaign access',
                'unique_together': {('campaign', 'user_profile')},
            },
        ),
    ]

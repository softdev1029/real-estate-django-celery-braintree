# Generated by Django 2.2.13 on 2020-10-26 14:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('properties', '0004_merge_20200916_1058'),
    ]

    operations = [
        migrations.CreateModel(
            name='AttomAmortizedLoanEquityModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(blank=True, max_length=2, null=True)),
                ('county', models.CharField(blank=True, max_length=50, null=True)),
                ('jurisdiction', models.CharField(blank=True, max_length=50, null=True)),
                ('fips', models.CharField(blank=True, max_length=5, null=True)),
                ('amortization_date', models.DateField(blank=True, null=True)),
                ('first_loan_transaction_id', models.PositiveIntegerField(blank=True, null=True)),
                ('first_loan_amortized', models.PositiveIntegerField(blank=True, null=True)),
                ('second_loan_transaction_id', models.PositiveIntegerField(blank=True, null=True)),
                ('second_loan_amortized', models.PositiveIntegerField(blank=True, null=True)),
                ('third_loan_transaction_id', models.PositiveIntegerField(blank=True, null=True)),
                ('third_loan_amortized', models.PositiveIntegerField(blank=True, null=True)),
                ('altv', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('est_avail_equity', models.PositiveIntegerField(blank=True, null=True)),
                ('est_lendable_equity', models.PositiveIntegerField(blank=True, null=True)),
                ('publication_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AttomAssessor',
            fields=[
                ('attom_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('property_address_full', models.CharField(blank=True, max_length=150, null=True)),
                ('property_address_house_number', models.CharField(blank=True, max_length=25, null=True)),
                ('property_address_street_direction', models.CharField(blank=True, max_length=10, null=True)),
                ('property_address_street_name', models.CharField(blank=True, max_length=100, null=True)),
                ('property_address_street_suffix', models.CharField(blank=True, max_length=25, null=True)),
                ('property_address_street_post_direction', models.CharField(blank=True, max_length=10, null=True)),
                ('property_address_unit_prefix', models.CharField(blank=True, max_length=20, null=True)),
                ('property_address_unit_value', models.CharField(blank=True, max_length=25, null=True)),
                ('property_address_city', models.CharField(blank=True, max_length=50, null=True)),
                ('property_address_state', models.CharField(blank=True, max_length=2, null=True)),
                ('property_address_zip', models.CharField(blank=True, max_length=5, null=True)),
                ('property_address_zip4', models.CharField(blank=True, max_length=4, null=True)),
                ('legal_description', models.CharField(blank=True, max_length=255, null=True)),
                ('party_owner_1name_first', models.CharField(blank=True, max_length=50, null=True)),
                ('party_owner_1name_last', models.CharField(blank=True, max_length=50, null=True)),
                ('owner_type_description_1', models.CharField(blank=True, choices=[(None, 'UNKNOWN OR NOT PROVIDED'), ('Individual', 'Owned by a person, couple or some non-incorporated entity'), ('Company', ' Company'), ('Deceased', 'The owner is deceased'), ('Unknown', 'Unable to determine the owner type'), ('Government', 'Owned by a Federal, State or Local governmental agency or entity')], max_length=50, null=True)),
                ('year_built', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('year_built_effective', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('property_use_group', models.CharField(blank=True, choices=[('UNKNOWN', 'UNKNOWN OR NOT PROVIDED'), ('Commercial', 'The general use for the property is for commercial purposes'), ('Other', 'The general use for the property is for uses other than Residential or Commercial'), ('Residential', 'The general use for the property is for residential purposes')], max_length=50, null=True)),
                ('property_use_standardized', models.CharField(blank=True, choices=[(None, 'UNKNOWN OR NOT PROVIDED'), ('0', 'UNKNOWN'), ('101', 'DAIRY FARM'), ('102', 'DESERT OR BARREN LAND'), ('103', 'FARM, CROPS'), ('104', 'FEEDLOTS'), ('105', 'FARM (IRRIGATED OR DRY)'), ('106', 'HORTICULTURE, ORNAMENTAL (AGRICULTURAL)'), ('107', 'IRRIGATION, FLOOD CONTROL'), ('108', 'LIVESTOCK, ANIMALS'), ('109', 'MISCELLANEOUS STRUCTURES - RANCH, FARM FIXTURES'), ('110', 'ORCHARD (FRUIT, NUT)'), ('111', 'ORCHARDS, GROVES'), ('112', 'PASTURE'), ('113', 'POULTRY FARM (CHICKEN, TURKEY, FISH, BEES, RABBITS)'), ('114', 'RANCH'), ('115', 'RESERVOIR, WATER SUPPLY'), ('116', 'RURAL IMPROVED / NON-RESIDENTIAL'), ('117', 'RANGE LAND (GRAZING)'), ('118', 'AGRICULTURAL/RURAL (GENERAL)'), ('119', 'TRUCK CROPS'), ('120', 'TIMBERLAND, FOREST, TREES'), ('121', 'VINEYARD'), ('122', 'WELL SITE (AGRICULTURAL)'), ('123', 'WILDLIFE (REFUGE)'), ('124', 'CONVENIENCE STORE (7-11)'), ('125', 'APPLIANCE STORE (CIRCUIT CITY, GOODS BUYS, BEST BUY)'), ('126', 'AUTO REPAIR, GARAGE'), ('127', 'VEHICLE SALES, VEHICLE RENTALS (AUTO/TRUCK/RV/BOAT/ETC)'), ('128', 'BAKERY'), ('129', 'BAR, TAVERN'), ('130', 'COMMERCIAL BUILDING, MAIL ORDER, SHOW ROOM (NON-AUTO), WAREHOUSE'), ('131', 'BED & BREAKFAST'), ('132', 'CASINO'), ('133', 'CEMETERY, FUNERAL HOME, MORTUARY (COMMERCIAL)'), ('134', 'COMMON AREA (COMMERCIAL, NOT SHOPPING CENTER)'), ('135', 'COMMERCIAL (GENERAL)'), ('136', 'COMMERCIAL OFFICE (GENERAL)'), ('137', 'CONVENIENCE STORE (W/FUEL PUMP)'), ('138', 'COMMERCIAL CONDOMINIUM (NOT OFFICES)'), ('139', 'CONDOMINIUM OFFICES'), ('140', 'STORE/OFFICE (MIXED USE)'), ('141', 'DEPARTMENT STORE (APPAREL, HOUSEHOLD GOODS, FURNITURE)'), ('142', 'DENTAL BUILDING'), ('143', 'DEPARTMENT STORE (MULTI-STORY)'), ('144', 'GARDEN CENTER, HOME IMPROVEMENT (DO-IT-YOURSELF)'), ('145', 'DRUG STORE, PHARMACY'), ('146', 'DRIVE-THRU RESTAURANT, FAST FOOD'), ('147', 'DRY CLEANER'), ('148', 'RESTAURANT'), ('149', 'FARM SUPPLY & EQUIPMENT (COMMERCIAL)'), ('150', 'FINANCIAL BUILDING'), ('151', 'GROCERY, SUPERMARKET'), ('152', 'HOSPITAL - PRIVATE'), ('153', 'HOTEL/MOTEL'), ('154', 'HOTEL-RESORT'), ('155', 'HOTEL'), ('156', 'KENNEL'), ('157', 'LAUNDROMAT (SELF-SERVICE)'), ('158', 'LIQUOR STORE'), ('159', 'MOBILE COMMERCIAL UNITS'), ('160', 'MEDICAL BUILDING'), ('161', 'MIXED USE (COMMERCIAL/INDUSTRIAL)'), ('162', 'MOBILE HOME PARK, TRAILER PARK'), ('163', 'MOTEL'), ('164', 'COMMERCIAL MULTI-PARCEL MISCELLANEOUS'), ('165', 'COMMERCIAL MISCELLANEOUS'), ('166', 'NIGHTCLUB (COCKTAIL LOUNGE)'), ('167', 'NEIGHBORHOOD: SHOPPING CENTER, STRIP CENTER, ENTERPRISE ZONE'), ('168', 'NURSERY, GREENHOUSE, FLORIST (RETAIL, WHOLESALE)'), ('169', 'OFFICE BUILDING'), ('170', 'OFFICE BUILDING (MULTI-STORY)'), ('171', 'COMMERCIAL OFFICE/RESIDENTIAL (MIXED USE)'), ('172', 'PARKING GARAGE, PARKING STRUCTURE'), ('173', 'PRINTER - RETAIL (PIP, QWIKCOPY, ETC)'), ('174', 'PARKING LOT'), ('175', 'DAY CARE, PRE-SCHOOL (COMMERCIAL)'), ('176', 'PROFESSIONAL BUILDING (MULTI-STORY)'), ('177', 'PROFESSIONAL BUILDING (LEGAL, INSURANCE, REAL ESTATE, BUSINESS)'), ('178', 'RETAIL STORES (PERSONAL SERVICES, PHOTOGRAPHY, TRAVEL)'), ('179', 'REGIONAL: SHOPPING CENTER, MALL (W/ANCHOR)'), ('180', 'GAS STATION'), ('181', 'SINGLE FAMILY RESIDENTIAL'), ('182', 'SHOPPING CENTER COMMON AREA (PARKING ETC)'), ('183', 'COMMUNITY: SHOPPING CENTER, MINI-MALL'), ('184', 'SKYSCRAPER/HIGH-RISE (COMMERCIAL OFFICES)'), ('185', 'SERVICE STATION W/CONVENIENCE STORE (FOOD MART)'), ('186', 'SERVICE STATION (FULL SERVICE)'), ('187', 'STORES & APARTMENTS'), ('188', 'STORE, RETAIL OUTLET'), ('189', 'TAKE-OUT RESTAURANT (FOOD PREPARATION)'), ('190', 'TRUCK STOP (FUEL AND DINER)'), ('191', 'SERVICE SHOP (TV, RADIO, ELECTRIC, PLUMBING)'), ('192', 'VETERINARY, ANIMAL HOSPITAL'), ('193', 'CAR WASH'), ('194', 'WHOLESALE OUTLET, DISCOUNT STORE (FRANCHISE)'), ('195', 'ASSEMBLY (LIGHT INDUSTRIAL)'), ('196', 'BULK STORAGE, TANKS (GASOLINE, FUEL, ETC)'), ('197', 'CANNERY'), ('198', 'CONSTRUCTION/CONTRACTING SERVICES (INDUSTRIAL)'), ('199', 'CHEMICAL'), ('200', 'COMMON AREA (INDUSTRIAL)'), ('201', 'CONDOMINIUMS (INDUSTRIAL)'), ('202', 'COLD STORAGE'), ('203', 'DISTILLERY, BREWERY, BOTTLING'), ('204', 'DUMP SITE'), ('205', 'FACTORY (APPAREL, TEXTILE, LEATHER, MEDIUM MFG)'), ('206', 'FOOD PROCESSING'), ('207', 'FOUNDRY, INDUSTRIAL PLANT (METAL, RUBBER, PLASTIC)'), ('208', 'FOOD PACKING, PACKING PLANT (FRUIT, VEGETABLE, MEAT, DAIRY)'), ('209', 'GRAIN ELEVATOR'), ('210', 'HEAVY INDUSTRIAL (GENERAL)'), ('211', 'HEAVY MANUFACTURING'), ('212', 'INDUSTRIAL (GENERAL)'), ('213', 'INDUSTRIAL PARK'), ('214', 'LABOR CAMPS (INDUSTRIAL)'), ('215', 'LIGHT INDUSTRIAL (10% IMPROVED OFFICE SPACE; MACHINE SHOP)'), ('216', 'INDUSTRIAL LOFT BUILDING, LOFT BUILDING'), ('217', 'LUMBERYARD, BUILDING MATERIALS'), ('218', 'LUMBER & WOOD PRODUCT MFG (INCLUDING FURNITURE)'), ('219', 'MARINE FACILITY/BOARD REPAIRS (SMALL CRAFT, SAILBOAT)'), ('220', 'MANUFACTURING (LIGHT)'), ('221', 'MILL (FEED, GRAIN, PAPER, LUMBER, TEXTILE, PULP'), ('222', 'MINING, MINERAL, QUARRIES'), ('223', 'INDUSTRIAL MISCELLANEOUS'), ('224', 'MULTI-TENANT INDUSTRIAL BUILDING'), ('225', 'PAPER PRODUCT MFG & RELATED PRODUCTS'), ('226', 'REFINERY, PETROLEUM PRODUCTS'), ('227', 'PRINTING * PUBLISHING (LIGHT INDUSTRIAL)'), ('228', 'PROCESSING PLANT (MINERALS, CEMENT, ROCK, GRAVEL, GLASS, CLAY)'), ('229', 'MINI-WAREHOUSE, STORAGE'), ('230', 'QUARRIES (SAND, GRAVEL, ROCK)'), ('231', 'R&D FACILITY, LABORATORY, RESEARCH FACILITY, COSMETICS, PHARMACEUTICAL'), ('232', 'RECYCLING (METAL, PAPER, GLASS)'), ('233', 'SHIPYARD - BUILT OR REPAIRED (SEAGOING VESSELS)'), ('234', 'SLAUGHTER HOUSE, STOCKYARD'), ('235', 'STORAGE YARD (JUNK, AUTO WRECKING, SALVAGE)'), ('236', 'STORAGE YARD, OPEN STORAGE (LIGHT EQUIPMENT, MATERIAL)'), ('237', 'SUGAR REFINERY'), ('238', 'WAREHOUSE, STORAGE'), ('239', 'WINERY'), ('240', 'WASTE DISPOSAL, SEWAGE (PROCESSING, DISPOSAL, STORAGE, TREATMENT)'), ('241', 'COMMON AREA (MISC)'), ('242', 'EASEMENT (MISC)'), ('243', 'HOMESTEAD (MISC)'), ('244', 'LEASEHOLD RIGHTS (MISC)'), ('245', 'PETROLEUM & GAS WELLS (MISC)'), ('246', 'PIPELINE OR RIGHT-OF-WAY'), ('247', 'POSSESSORY INTEREST (MISC)'), ('248', 'RAIL (RIGHT-OF-WAY & TRACK)'), ('249', 'ROAD (RIGHT-OF-WAY)'), ('250', 'ROYALTY INTEREST'), ('251', 'RIGHT-OF-WAY (NOT RAIL, ROAD OR UTILITY)'), ('252', 'SUB-SURFACE RIGHTS (MINERAL)'), ('253', 'SURFACE RIGHTS (GRAZING, TIMBER, COAL, ETC.)'), ('254', 'UNKNOWN'), ('255', 'UTILITIES (RIGHT-OF-WAY ONLY)'), ('256', 'WATER RIGHTS (MISC)'), ('257', 'WORKING INTEREST'), ('258', 'AIRPORT & RELATED'), ('259', 'ARCADES (AMUSEMENT)'), ('260', 'ARENA, CONVENTION CENTER'), ('261', 'AUDITORIUM'), ('262', 'OUTDOOR RECREATION: BEACH, MOUNTAIN, DESERT'), ('263', 'POOL HALL, BILLIARD PARLOR'), ('264', 'BOWLING ALLEY'), ('265', 'BUS TERMINAL'), ('266', 'COMMERCIAL AUTO TRANSPORTATION/STORAGE'), ('267', 'COUNTRY CLUB'), ('268', 'CENTRALLY ASSESSED'), ('269', 'CHARITABLE ORGANIZATION, FRATERNAL'), ('270', 'CLUBS, LODGES, PROFESSIONAL ASSOCIATIONS'), ('271', 'COMMUNITY CENTER (EXEMPT)'), ('272', 'COMMUNICATIONS'), ('273', 'CAMPGROUND, RV PARK'), ('274', 'COLLEGE, UNIVERSITY, VOCATIONAL SCHOOL - PRIVATE'), ('275', 'CREMATORIUM, MORTUARY (EXEMPT)'), ('276', 'CABLE TV STATION'), ('277', 'CITY, MUNICIPAL, TOWN, VILLAGE OWNED (EXEMPT)'), ('278', 'COUNTY OWNED (EXEMPT)'), ('279', 'DANCE HALL'), ('280', 'DISTRIBUTION WAREHOUSE (REGIONAL)'), ('281', 'DRIVE-IN THEATER'), ('282', 'CEMETERY (EXEMPT)'), ('283', 'EMERGENCY (POLICE, FIRE, RESCUE, SHELTERS, ANIMAL SHELTER)'), ('284', 'EXEMPT (FULL OR PARTIAL)'), ('285', 'FAIRGROUNDS'), ('286', 'FEDERAL PROPERTY (EXEMPT)'), ('287', 'FISH CAMPS, GAME CLUB TARGET SHOOTING'), ('288', 'FOREST (PARK, RESERVE, RECREATION, CONSERVATION)'), ('289', 'FREEWAYS, STATE HWYS'), ('290', 'DRIVING RANGE (GOLF)'), ('291', 'TRANSPORTATION (GENERAL)'), ('292', 'GO-CARTS, MINIATURE GOLD, WATER SLIDES'), ('293', 'GOLF COURSE'), ('294', 'GOVERNMENTAL / PUBLIC USE (GENERAL)'), ('295', 'GOVT. ADMINISTRATIVE OFFICE (FEDERAL, STATE, LOCAL, COURT HOUSE)'), ('296', 'GYM, HEALTH SPA'), ('297', 'HISTORICAL DISTRICT'), ('298', 'CULTURAL, HISTORICAL (MONUMENTS, HOMES, MUSEUMS, OTHER)'), ('299', 'HISTORICAL TRANSIENT LODGING (HOTEL, MOTEL)'), ('300', 'HARBOR & MARINE TRANSPORTATION'), ('301', 'HISTORICAL OFFICE'), ('302', 'HOSPITAL - PUBLIC'), ('303', 'HISTORICAL PARK, SITE, MISC.'), ('304', 'HISTORICAL - PRIVATE (GENERAL)'), ('305', 'HISTORICAL RECREATION, ENTERTAINMENT'), ('306', 'HISTORICAL RESIDENCE'), ('307', 'HISTORICAL RETAIL'), ('308', 'HISTORICAL WAREHOUSE'), ('309', 'INDIAN LANDS'), ('310', 'INSTITUTIONAL (GENERAL)'), ('311', 'MARINA, BOAT SLIPS, YACHT CLUB, BOAT LANDING'), ('312', 'MEDICAL CLINIC'), ('313', 'MICROWAVE'), ('314', 'MILITARY (OFFICE, BASE, POST, PORT, RESERVE, WEAPON RANGE, TEST SITES)'), ('315', 'MISCELLANEOUS (GENERAL)'), ('316', 'MUSEUM, LIBRARY, ART GALLERY (RECREATIONAL)'), ('317', 'NATURAL RESOURCES'), ('318', 'RECREATIONAL NON-TAXABLE (CAMPS, BOY SCOUTS)'), ('319', 'CORRECTIONAL FACILITY, JAILS, PRISONS, INSANE ASYLUM'), ('320', "CHILDREN'S HOME, ORPHANAGE"), ('321', 'PUBLIC HEALTH CARE FACILITY (EXEMPT)'), ('322', 'PARK, PLAYGROUND, PICNIC AREA'), ('323', 'PIERS, WHARF (RECREATION)'), ('324', 'POLLUTION CONTROL'), ('325', 'POST OFFICE'), ('326', 'PUBLIC SWIMMING POOL'), ('327', 'AMUSEMENT PARK, TOURIST ATTRACTION'), ('328', 'PAROCHIAL SCHOOL, PRIVATE SCHOOL'), ('329', 'PUBLIC UTILITY (ELECTRIC, WATER, GAS, ETC.)'), ('330', 'RAILROAD & RELATED'), ('331', 'RACQUET COURT, TENNIS COURT'), ('332', 'RECREATIONAL CENTER'), ('333', 'REGULATING DISTRICTS & ASSESSMENTS; TAX ABATEMENT'), ('334', 'RECREATIONAL/ENTERTAINMENT (GENERAL)'), ('335', 'REDEVELOPMENT AGENCY OR ZONE'), ('336', 'RELIGIOUS, CHURCH, WORSHIP (SYNAGOGUE, TEMPLE, PARSONAGE)'), ('337', 'RIDING STABLE, TRAILS'), ('338', 'ROADS, STREETS, BRIDGES'), ('339', 'HOMES (RETIRED, HANDICAP, REST, CONVALESCENT, NURSING)'), ('340', 'RADIO OR TV STATION'), ('341', 'SBE - SPECIAL ASSESSMENTS'), ('342', 'PUBLIC SCHOOL (ADMINISTRATION, CAMPUS, DORMS, INSTRUCTION)'), ('343', 'SKATING RINK, ICE SKATING, ROLLER SKATING'), ('344', 'STATE OWNED (EXEMPT)'), ('345', 'SPECIAL PURPOSE'), ('346', 'STADIUM'), ('347', 'TELEGRAPH, TELEPHONE'), ('348', 'THEATER (MOVIE)'), ('349', 'TRANSPORTATION (AIR, RAIL, BUS)'), ('350', 'RACE TRACK (AUTO, DOG, HORSE)'), ('351', 'TRUCK TERMINAL (MOTOR FREIGHT)'), ('352', 'COLLEGES, UNIVERSITY - PUBLIC'), ('353', 'PRIVATE UTILITY (ELECTRIC, WATER, GAS, ETC.)'), ('354', 'WELFARE, SOCIAL SERVICE, LOW INCOME HOUSING (EXEMPT)'), ('355', 'ZOO'), ('356', 'OTHER EXEMPT PROPERTY'), ('357', 'GARDEN APT, COURT APT (5+ UNITS)'), ('358', 'HIGH-RISE APARTMENTS'), ('359', 'APARTMENT HOUSE (100+ UNITS)'), ('360', 'APARTMENTS (GENERIC)'), ('361', 'APARTMENT HOUSE (5+ UNITS)'), ('362', 'BOARDING/ROOMING HOUSE, APT HOTEL'), ('363', 'BUNGALOW (RESIDENTIAL)'), ('364', 'CLUSTER HOME'), ('365', 'COMMON AREA (RESIDENTIAL)'), ('366', 'CONDOMINIUM'), ('367', 'COOPERATIVE'), ('368', 'DORMITORY, GROUP QUARTERS (RESIDENTIAL)'), ('369', 'DUPLEX (2 UNITS, ANY COMBINATION)'), ('370', 'FRATERNITY HOUSE, SORORITY HOUSE'), ('371', 'MANUFACTURED, MODULAR, PRE-FABRICATED HOMES'), ('372', 'MULTI-FAMILY DWELLINGS (GENERIC, ANY COMBINATION)'), ('373', 'MOBILE HOME'), ('374', 'RESIDENTIAL MULTI-PARCEL MISCELLANEOUS'), ('375', 'MISCELLANEOUS (RESIDENTIAL)'), ('376', 'PATIO HOME'), ('377', 'PLANNED UNIT DEVELOPMENT (PUD)'), ('378', 'QUADPLEX (4 UNITS, ANY COMBINATION)'), ('379', 'CONDOMINIUM DEVELOPMENT (ASSOCIATION ASSESSMENT)'), ('380', 'RESIDENTIAL (GENERAL/SINGLE)'), ('381', 'RESIDENTIAL INCOME (GENERAL/MULTI-FAMILY)'), ('382', 'ROW HOUSE'), ('383', 'RURAL RESIDENCE'), ('384', 'SEASONAL, CABIN, VACATION RESIDENCE'), ('385', 'SINGLE FAMILY RESIDENCE'), ('386', 'TOWNHOUSE'), ('387', 'TIMESHARE'), ('388', 'TRIPLEX (3 UNITS, ANY COMBINATION)'), ('389', 'VACANT LAND'), ('390', 'ZERO LOT LINE (RESIDENTIAL)'), ('391', 'ABANDONED SITE, CONTAMINATED SITE'), ('392', 'AGRICULTURAL (UNIMPROVED) - VACANT LAND'), ('393', 'VACANT COMMERCIAL'), ('394', 'GOVERNMENT - VACANT LAND'), ('395', 'INDUSTRIAL - VACANT LAND'), ('396', 'INSTITUTIONAL - VACANT LAND'), ('397', 'VACANT'), ('398', 'MULTI-FAMILY - VACANT LAND'), ('399', 'PRIVATE PRESERVE, OPEN SPACE - VACANT LAND'), ('400', 'RECREATIONAL - VACANT LAND'), ('401', 'RESIDENTIAL - VACANT LAND'), ('402', 'UNDER CONSTRUCTION'), ('403', 'UNUSABLE LAND (REMNANT, STEEP, ETC.)'), ('404', 'WASTE LAND, MARSH, SWAMP, SUBMERGED - VACANT LAND'), ('406', 'WATER AREA (LAKES, RIVER, SHORE) - VACANT LAND'), ('407', 'COMMON AREA (MISC.)'), ('408', 'TEMPORARY STRUCTURES'), ('409', 'VACANT LAND - EXEMPT'), ('410', 'SPORTS COMPLEX'), ('411', 'PERSONAL PROPERTY (GENERAL)'), ('412', 'PET BOARDING & GROOMING'), ('413', 'CROPS (IN GROUND)'), ('414', 'STRUCTURES (GENERAL)'), ('415', 'AIRCRAFT'), ('416', 'LANDOMINIUM'), ('417', 'SURFACE RIGHTS (GRAZING, TIMBER, COAL, ETC.)'), ('418', 'RESIDENTIAL PARKING GARAGE'), ('419', 'INVENTORY'), ('420', 'MOTOR VEHICLES (CARS, TRUCKS, ETC.)'), ('421', 'CONDOMINIUM BUILDING (RESIDENTIAL)'), ('422', 'MISC STRUCTURES NOT OTHERWISE CLASSED (BILLBOARDS, ETC.)'), ('423', 'BARNDOMINIUM'), ('424', 'SUB-SURFACE RIGHTS (MINERAL)'), ('425', 'GOODS IN TRANSIT'), ('426', 'RIGHT-OF-WAY (NOT RAIL, ROAD OR UTILITY)'), ('427', 'SPACECRAFT'), ('428', 'RAIL (RIGHT-OF-WAY & TRACK)'), ('429', 'STRUCTURES ON LEASED LAND'), ('430', 'ROYALTY INTEREST'), ('431', 'POSSESSORY INTEREST (MISC.)'), ('432', 'WATERCRAFT (SHIPS, BOATS, PWCS, ETC.)'), ('433', 'CAR WASH - SELF-SERVE'), ('434', 'ROLLING STOCK (RAILROAD)'), ('435', 'WATER RIGHTS (MISC.)'), ('436', 'MISC PERSONAL PROPERTY NOT OTHERWISE CLASSED'), ('437', 'INTANGIBLE PERSONAL PROPERTY'), ('438', 'LEASEHOLD RIGHTS (MISC.)'), ('439', 'MISC. BUSINESS PERSONAL PROPERTY NOT OTHERWISE CLASSED'), ('440', 'HOMESTEAD (MISC.)'), ('441', 'VEHICLES (GENERAL)'), ('442', 'UTILITIES (RIGHT-OF-WAY ONLY)'), ('443', 'PIPELINE OR RIGHT-OF-WAY'), ('444', 'MISC VEHICLES NOT OTHERWISE CLASSED (ANTIQUES, ETC.)'), ('445', 'BUSINESS PERSONAL PROPERTY (GENERAL)'), ('446', 'CROPS (HARVESTED)'), ('447', 'TINY HOUSE'), ('448', 'RESIDENTIAL STORAGE SPACE'), ('449', 'ROADSIDE MARKET'), ('450', 'CANNABIS GROW FACILITY'), ('451', 'CELLULAR'), ('452', 'GARDEN HOME'), ('453', 'VACANT LAND - DESTROYED/UNINHABITABLE IMPROVEMENT'), ('454', 'ROAD (RIGHT-OF-WAY)'), ('455', 'EQUIPMENT / SUPPLIES'), ('456', 'PETROLEUM & GAS WELLS (MISC.)'), ('457', 'WORKING INTEREST'), ('458', 'CAR WASH - AUTOMATED'), ('459', 'CANNABIS DISPENSARY'), ('460', 'RECREATIONAL VEHICLES / TRAVEL TRAILERS'), ('461', 'COOPERATIVE BUILDING (RESIDENTIAL)'), ('462', 'VACANT LAND - UNSPECIFIED IMPROVEMENT'), ('463', 'PARCELS WITH IMPROVEMENTS, USE NOT SPECIFIED'), ('464', 'BARBER/HAIR SALON'), ('465', 'EASEMENT (MISC.)'), ('466', 'LIVESTOCK (ANIMALS, FISH, BIRDS, ETC.)')], max_length=4, null=True)),
                ('deed_last_sale_date', models.DateField(blank=True, null=True)),
                ('deed_last_sale_price', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('area_gross', models.PositiveIntegerField(blank=True, null=True)),
                ('area_1st_floor', models.PositiveIntegerField(blank=True, null=True)),
                ('area_2nd_floor', models.PositiveIntegerField(blank=True, null=True)),
                ('area_upper_floors', models.PositiveIntegerField(blank=True, null=True)),
                ('area_lot_acres', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('area_lot_sf', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('parking_garage', models.CharField(blank=True, choices=[(None, 'UNKNOWN OR NOT PROVIDED'), ('0', 'UNKNOWN'), ('1', 'UNKNOWN OR NOT PROVIDED'), ('4', 'Pole Building Garage'), ('11', 'Garage, Attached'), ('12', 'Garage, Detached'), ('13', 'Garage, Unfinished'), ('14', 'Garage, Finished'), ('15', 'Garage, Enclosed'), ('16', 'Garage, Open'), ('17', 'Detached (Unspecified)'), ('18', 'Attached (Unspecified)'), ('19', 'Detached, Finished'), ('20', 'Detached, Unfinished'), ('21', 'Attached, Finished'), ('22', 'Attached, Unfinished'), ('23', 'Detached, 1-Car'), ('24', 'Detached, 2-Car'), ('25', 'Detached, 3+ Car'), ('26', 'Attached, 1-Car'), ('27', 'Attached, 2-Car'), ('28', 'Attached, 3+ Car'), ('30', 'Carport (Unspecified)'), ('31', 'Carport, Attached'), ('32', 'Carport, Detached'), ('33', 'Carport, Enclosed'), ('34', 'Carport, Open'), ('35', 'Carport, 1-Car'), ('36', 'Carport, 2-Car'), ('37', 'Carport, 3+ Car'), ('38', 'Carport, Finished'), ('39', 'Carport, Unfinished'), ('40', 'Garage, Basement'), ('41', 'Garage, Basement, 1-Car'), ('42', 'Garage, Basement, 2-Car'), ('43', 'Garage, Basement, 3+ Car'), ('44', 'Garage, Basement, Finished'), ('45', 'Garage, Basement, Finished, 1-Car'), ('46', 'Garage, Basement, Finished, 2-Car'), ('47', 'Garage, Basement, Finished, 3+ Car'), ('48', 'Garage, Basement, Unfinished'), ('49', 'Garage, Basement, Unfinished, 1-Car'), ('50', 'Garage, Basement, Unfinished, 2-Car'), ('51', 'Garage, Basement, Unfinished, 3+ Car'), ('52', 'Garage, Tuckunder'), ('53', 'Garage, Built-in'), ('54', 'Garage, Built-in, 1-Car'), ('55', 'Garage, Built-in, 2-Car'), ('57', 'Garage, Built-in, Unfinished'), ('58', 'Garage, Built-in, Finished'), ('59', 'Garage, 1-Car'), ('60', 'Garage, 2-Car'), ('61', 'Garage, 3+ Car'), ('62', 'Garage, Unfinished, 1-Car'), ('63', 'Garage, Unfinished, 2-Car'), ('64', 'Garage, Unfinished, 3+ Car'), ('65', 'Carport, Detached, Finished'), ('67', 'Carport, Detached, Unfinished'), ('68', 'Covered'), ('69', 'Mixed'), ('70', 'Garage, Heated'), ('189', 'Parking Structure'), ('999', 'Type Not Specified')], max_length=4, null=True)),
                ('parking_garage_area', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('bath_count', models.IntegerField(blank=True, null=True)),
                ('bath_partial_count', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('bedrooms_count', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('rooms_count', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('stories_count', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('units_count', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('publication_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'properties_attomassesor',
            },
        ),
        migrations.CreateModel(
            name='AttomAssessorDelete',
            fields=[
                ('attom_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='AttomLoanModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('situs_state_code', models.CharField(blank=True, max_length=2, null=True)),
                ('situs_county', models.CharField(blank=True, max_length=50, null=True)),
                ('property_jurisdiction_name', models.CharField(blank=True, max_length=50, null=True)),
                ('situs_state_county_fips', models.CharField(blank=True, max_length=5, null=True)),
                ('cur_first_position_open_loan_amount', models.BigIntegerField(blank=True, null=True)),
                ('cur_first_position_open_loan_document_number_formatted', models.CharField(blank=True, max_length=50, null=True)),
                ('cur_first_position_open_loan_recording_date', models.DateField(blank=True, null=True)),
                ('cur_first_position_open_loan_type', models.CharField(blank=True, choices=[(None, 'Unknown'), ('P', 'Purchase'), ('R', 'Refinance'), ('E', 'Equity')], max_length=1, null=True)),
                ('cur_first_position_open_loan_lender_name_first', models.CharField(blank=True, max_length=50, null=True)),
                ('cur_first_position_open_loan_lender_name_last', models.CharField(blank=True, max_length=50, null=True)),
                ('cur_first_position_open_loan_interest_rate_type', models.CharField(blank=True, max_length=3, null=True)),
                ('cur_first_position_open_loan_interest_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('cur_first_position_mortgage_type', models.CharField(blank=True, max_length=3, null=True)),
                ('cur_second_position_open_loan_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('cur_second_position_open_loan_document_number_formatted', models.CharField(blank=True, max_length=50, null=True)),
                ('cur_second_position_open_loan_recording_date', models.DateField(blank=True, null=True)),
                ('cur_second_position_open_loan_type', models.CharField(blank=True, choices=[(None, 'Unknown'), ('P', 'Purchase'), ('R', 'Refinance'), ('E', 'Equity')], max_length=1, null=True)),
                ('cur_second_position_open_loan_lender_name_first', models.CharField(blank=True, max_length=50, null=True)),
                ('cur_second_position_open_loan_lender_name_last', models.CharField(blank=True, max_length=50, null=True)),
                ('cur_second_position_open_loan_lender_info_entity_class', models.CharField(blank=True, max_length=2, null=True)),
                ('cur_second_position_open_loan_interest_rate_type', models.CharField(blank=True, max_length=3, null=True)),
                ('cur_second_position_open_loan_interest_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('cur_second_position_mortgage_type', models.CharField(blank=True, max_length=3, null=True)),
                ('cur_third_position_open_loan_transaction_id', models.PositiveIntegerField(blank=True, null=True)),
                ('ltv', models.BigIntegerField(blank=True, null=True)),
                ('available_equity', models.BigIntegerField(blank=True, null=True)),
                ('lendable_equity', models.BigIntegerField(blank=True, null=True)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('attom_id', models.OneToOneField(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='properties.AttomAssessor')),
            ],
        ),
        migrations.CreateModel(
            name='AttomPreForeclosure',
            fields=[
                ('transaction_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('record_type', models.CharField(blank=True, choices=[(None, 'Unknown or not provided'), ('LIS', 'Lis Pendens'), ('NOD', 'Notice of Default'), ('NOS', 'Notice of Sale'), ('NTS', "Notice of Trustee's Sale")], max_length=3, null=True)),
                ('situs_state_code', models.CharField(blank=True, max_length=2, null=True)),
                ('situs_county', models.CharField(blank=True, max_length=50, null=True)),
                ('bath_count', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('bedrooms_count', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('area_building', models.PositiveIntegerField(blank=True, null=True)),
                ('area_building_definition_code', models.CharField(blank=True, choices=[(None, 'Unknown or not provided'), ('0', 'Unknown'), ('10', 'Living Area'), ('11', 'Heated Area'), ('12', 'Adjusted Area'), ('13', 'Gross Area'), ('14', 'Effective Area'), ('15', 'Building Perimeter'), ('16', 'Total Area'), ('17', 'Base Area'), ('18', 'Garage'), ('19', 'Attic'), ('20', 'Finished Area')], max_length=2, null=True)),
                ('area_lot_sf', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('area_lot_acres', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('year_built', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('year_built_effective', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('borrower_name_owner', models.CharField(blank=True, max_length=100, null=True)),
                ('original_loan_loan_number', models.CharField(blank=True, max_length=25, null=True)),
                ('original_loan_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('original_loan_interest_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('loan_maturity_date', models.DateField(blank=True, null=True)),
                ('lender_name_full_standardized', models.CharField(blank=True, max_length=250, null=True)),
                ('trustee_name', models.CharField(blank=True, max_length=150, null=True)),
                ('foreclosure_recording_date', models.DateField(blank=True, null=True)),
                ('default_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('penalty_interest', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('loan_balance', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('judgment_date', models.DateField(blank=True, null=True)),
                ('judgment_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('auction_date', models.DateField(blank=True, null=True)),
                ('auction_time', models.CharField(blank=True, max_length=20, null=True)),
                ('estimated_value', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('create_date', models.DateField(blank=True, null=True)),
                ('record_last_updated', models.DateField(blank=True, null=True)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('attom_id', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='properties.AttomAssessor')),
            ],
        ),
        migrations.CreateModel(
            name='AttomRecorder',
            fields=[
                ('transaction_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('recording_date', models.DateField(blank=True, null=True)),
                ('quitclaim_flag', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('transfer_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('transfer_amount_info_accuracy', models.CharField(blank=True, max_length=4, null=True)),
                ('grantor_1name_first', models.CharField(blank=True, max_length=50, null=True)),
                ('grantor_1name_last', models.CharField(blank=True, max_length=50, null=True)),
                ('grantor_2name_first', models.CharField(blank=True, max_length=50, null=True)),
                ('grantor_2name_last', models.CharField(blank=True, max_length=50, null=True)),
                ('grantee_1name_first', models.CharField(blank=True, max_length=50, null=True)),
                ('grantee_1name_last', models.CharField(blank=True, max_length=50, null=True)),
                ('grantee_2name_first', models.CharField(blank=True, max_length=50, null=True)),
                ('grantee_2name_last', models.CharField(blank=True, max_length=50, null=True)),
                ('grantee_mail_address_full', models.CharField(blank=True, max_length=100, null=True)),
                ('grantee_mail_address_house_number', models.CharField(blank=True, max_length=25, null=True)),
                ('grantee_mail_address_street_direction', models.CharField(blank=True, max_length=10, null=True)),
                ('grantee_mail_address_street_name', models.CharField(blank=True, max_length=100, null=True)),
                ('grantee_mail_address_street_suffix', models.CharField(blank=True, max_length=25, null=True)),
                ('grantee_mail_address_city', models.CharField(blank=True, max_length=50, null=True)),
                ('grantee_mail_address_state', models.CharField(blank=True, max_length=2, null=True)),
                ('grantee_mail_address_zip', models.CharField(blank=True, max_length=5, null=True)),
                ('grantee_mail_address_zip4', models.CharField(blank=True, max_length=4, null=True)),
                ('mortgage_1recording_date', models.DateField(blank=True, null=True)),
                ('mortgage_1type', models.CharField(blank=True, choices=[(None, 'UNKNOWN OR NOT PROVIDED'), ('0', 'UNKNOWN'), ('3', 'BUILDING OR CONSTRUCTION'), ('6', 'LINE OF CREDIT'), ('8', 'FHA'), ('10', 'CONVENTIONAL'), ('11', 'CONVENTIONAL WITH PMI'), ('16', 'VETERANS ADMINISTRATION'), ('101', 'USDA - US DEPT OF AGRICULTURE'), ('102', 'FARMERS HOME ADMINISTRATION'), ('103', 'COMMERCIAL'), ('104', 'STATE VETERANS'), ('105', 'REVERSE MORTGAGE'), ('121', 'ASSUMPTION'), ('122', 'BALLOON'), ('123', 'ARM (ADJUSTABLE RATE MORTGAGE)'), ('124', 'CLOSED END MORTGAGE'), ('125', 'SELLER TAKE-BACK'), ('126', 'STAND ALONE FIRST'), ('127', 'STAND ALONE REFI'), ('128', 'STAND ALONE SECOND'), ('129', 'REFI-ASSIGNMENT'), ('130', 'SECOND MORTGAGE TO COVER DOWN PYMT'), ('131', 'LAND CONTRACT (ARGMT OF SALE)'), ('132', 'LOAN MODIFICATION'), ('133', 'SMALL BUSINESS ASSOC'), ('134', 'CASH'), ('135', 'NEGATIVE AMORTIZATION')], max_length=3, null=True)),
                ('mortgage_1amount', models.IntegerField(blank=True, null=True)),
                ('mortgage_1lender_code', models.IntegerField(blank=True, null=True)),
                ('mortgage_1lender_name_full_standardized', models.CharField(blank=True, max_length=250, null=True)),
                ('transfer_info_purchase_down_payment', models.IntegerField(blank=True, null=True)),
                ('transfer_info_purchase_loan_to_value', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('last_updated', models.DateField(blank=True, null=True)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('attom_id', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='properties.AttomAssessor')),
            ],
        ),
        migrations.AlterField(
            model_name='address',
            name='attom',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='properties.AttomAssessor'),
        ),
        migrations.DeleteModel(
            name='AttomAddressData',
        ),
        migrations.AddField(
            model_name='attomamortizedloanequitymodel',
            name='attom_id',
            field=models.OneToOneField(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='properties.AttomAssessor'),
        ),
    ]
